{"variants":[{"paths":["\/documentation\/rxswift\/infallible\/infallibletype-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/InfallibleType-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"RxSwift"}],"role":"collectionGroup","title":"InfallibleType Implementations"},"hierarchy":{"paths":[["doc:\/\/RxSwift\/documentation\/RxSwift","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/compactMap(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/concat(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/concatMap(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/debounce(_:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged()","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(_:comparer:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(at:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/filter(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMap(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMapFirst(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMapLatest(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/map(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/scan(_:accumulator:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/scan(into:accumulator:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/share(replay:scope:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/skip(until:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/skip(while:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/startWith(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(onNext:onCompleted:onDisposed:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(with:onNext:onCompleted:onDisposed:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(for:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:)-7r7wp","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:)-9t29","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:behavior:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(while:behavior:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/throttle(_:latest:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withLatestFrom(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withLatestFrom(_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withUnretained(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withUnretained(_:resultSelector:)"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/deferred(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/empty()","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/just(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/just(_:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-2fcyk","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-5qvw4","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-648nk","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/never()","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:resultSelector:)","doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:resultSelector:)"],"generated":true}],"references":{"doc://RxSwift/documentation/RxSwift/Infallible/debounce(_:scheduler:)":{"role":"symbol","title":"debounce(_:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debounce"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Ignores elements from an observable sequence which are followed by another element within a specified relative time duration, using the specified scheduler to run throttling timers."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/debounce(_:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/debounce(_:scheduler:)"},"doc://RxSwift/documentation/RxSwift/Infallible/merge(_:)-5qvw4":{"role":"symbol","title":"merge(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">...) -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges elements from all infallible sequences into a single infallible sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-5qvw4","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/merge(_:)-5qvw4"},"doc://RxSwift/documentation/RxSwift/Infallible/empty()":{"role":"symbol","title":"empty()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an empty infallible sequence, using the specified scheduler to send out the single "},{"type":"codeVoice","code":"Completed"},{"type":"text","text":" message."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/empty()","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/empty()"},"doc://RxSwift/documentation/RxSwift/Infallible/skip(while:)":{"role":"symbol","title":"skip(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Bypasses elements in an infallible sequence as long as a specified condition is true and then returns the remaining elements."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/skip(while:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/skip(while:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:_:_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E7"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E7"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E7"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:_:_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/withLatestFrom(_:)":{"role":"symbol","title":"withLatestFrom(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withLatestFrom"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges two observable sequences into one observable sequence by using latest element from the second sequence every time when "},{"type":"codeVoice","code":"self"},{"type":"text","text":" emits an element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withLatestFrom(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/withlatestfrom(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:_:_:_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E8"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E7"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E8"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E8"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:_:_:_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/distinctUntilChanged(_:)":{"role":"symbol","title":"distinctUntilChanged(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distinctUntilChanged"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that contains only distinct contiguous elements according to the "},{"type":"codeVoice","code":"comparer"},{"type":"text","text":"."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/distinctuntilchanged(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E4"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift":{"role":"collection","title":"RxSwift","abstract":[],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift","kind":"symbol","type":"topic","url":"\/documentation\/rxswift"},"doc://RxSwift/documentation/RxSwift/Infallible/concatMap(_:)":{"role":"symbol","title":"concatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence to an observable sequence and concatenates the resulting observable sequences into one observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/concatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/concatmap(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/just(_:scheduler:)":{"role":"symbol","title":"just(_:scheduler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"just"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ImmediateSchedulerType","preciseIdentifier":"s:7RxSwift22ImmediateSchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an infallible sequence that contains a single element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/just(_:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/just(_:scheduler:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(for:scheduler:)":{"role":"symbol","title":"take(for:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Takes elements for the specified duration from the start of the infallible source sequence, using the specified scheduler to run timers."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(for:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(for:scheduler:)"},"doc://RxSwift/documentation/RxSwift/Infallible/skip(until:)":{"role":"symbol","title":"skip(until:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the elements from the source infallible sequence that are emitted after the other infallible sequence produces an element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/skip(until:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/skip(until:)"},"doc://RxSwift/documentation/RxSwift/Infallible/filter(_:)":{"role":"symbol","title":"filter(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Filters the elements of an observable sequence based on a predicate."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/filter(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/filter(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/subscribe(_:)":{"role":"symbol","title":"subscribe(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:7RxSwift5EventO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"}],"abstract":[{"type":"text","text":"Subscribes an event handler to an observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/subscribe(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible":{"role":"symbol","title":"Infallible","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Infallible"}],"abstract":[{"type":"codeVoice","code":"Infallible"},{"type":"text","text":" is an "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"-like push-style interface"},{"type":"text","text":" "},{"type":"text","text":"which is guaranteed to not emit error events."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Infallible"}],"url":"\/documentation\/rxswift\/infallible"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E6"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E6"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/never()":{"role":"symbol","title":"never()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"never"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a non-terminating infallible sequence, which can be used to denote an infinite duration."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/never()","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/never()"},"doc://RxSwift/documentation/RxSwift/Infallible/subscribe(onNext:onCompleted:onDisposed:)":{"role":"symbol","title":"subscribe(onNext:onCompleted:onDisposed:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onNext"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onDisposed"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"}],"abstract":[{"type":"text","text":"Subscribes an element handler, a completion handler and disposed handler to an observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(onNext:onCompleted:onDisposed:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/subscribe(onnext:oncompleted:ondisposed:)"},"doc://RxSwift/documentation/RxSwift/Infallible/scan(into:accumulator:)":{"role":"symbol","title":"scan(into:accumulator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Seed"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accumulator"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/scan(into:accumulator:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/scan(into:accumulator:)"},"doc://RxSwift/documentation/RxSwift/Infallible/distinctUntilChanged()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"distinctUntilChanged()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distinctUntilChanged"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that contains only distinct contiguous elements according to equality operator."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged()","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/distinctuntilchanged()"},"doc://RxSwift/documentation/RxSwift/Infallible/distinctUntilChanged(at:)":{"role":"symbol","title":"distinctUntilChanged(at:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distinctUntilChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Property"},{"kind":"text","text":">("},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that contains only contiguous elements with distinct values in the provided key path on each object."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(at:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/distinctuntilchanged(at:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(_:)":{"role":"symbol","title":"take(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a specified number of contiguous elements from the start of an observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/throttle(_:latest:scheduler:)":{"role":"symbol","title":"throttle(_:latest:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"throttle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"latest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an Observable that emits the first and the latest item emitted by the source Observable during sequential time windows of a specified duration."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/throttle(_:latest:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/throttle(_:latest:scheduler:)"},"doc://RxSwift/documentation/RxSwift/Infallible/merge(_:)-648nk":{"role":"symbol","title":"merge(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges elements from all infallible sequences from array into a single infallible sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-648nk","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/merge(_:)-648nk"},"doc://RxSwift/documentation/RxSwift/Infallible/scan(_:accumulator:)":{"role":"symbol","title":"scan(_:accumulator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Seed"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accumulator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Seed"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Applies an accumulator function over an observable sequence and returns each intermediate result. The specified seed value is used as the initial accumulator value."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/scan(_:accumulator:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/scan(_:accumulator:)"},"doc://RxSwift/documentation/RxSwift/Infallible/subscribe(with:onNext:onCompleted:onDisposed:)":{"role":"symbol","title":"subscribe(with:onNext:onCompleted:onDisposed:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onNext"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onDisposed"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"}],"abstract":[{"type":"text","text":"Subscribes an element handler, a completion handler and disposed handler to an observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/subscribe(with:onNext:onCompleted:onDisposed:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/subscribe(with:onnext:oncompleted:ondisposed:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(until:)-7r7wp":{"role":"symbol","title":"take(until:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the elements from the source observable sequence until the other observable sequence produces an element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:)-7r7wp","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(until:)-7r7wp"},"doc://RxSwift/documentation/RxSwift/Infallible/map(_:)":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence into a new form."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/map(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/map(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/share(replay:scope:)":{"role":"symbol","title":"share(replay:scope:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"share"},{"kind":"text","text":"("},{"kind":"externalParam","text":"replay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SubjectLifetimeScope","preciseIdentifier":"s:7RxSwift20SubjectLifetimeScopeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that "},{"type":"strong","inlineContent":[{"type":"text","text":"shares a single subscription to the underlying sequence"}]},{"type":"text","text":", and immediately upon subscription replays  elements in buffer."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/share(replay:scope:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/share(replay:scope:)"},"doc://RxSwift/documentation/RxSwift/Infallible/flatMapLatest(_:)":{"role":"symbol","title":"flatMapLatest(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapLatest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence into a new sequence of observable sequences and then"},{"type":"text","text":" "},{"type":"text","text":"transforms an observable sequence of observable sequences into an observable sequence producing values only from the most recent observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMapLatest(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/flatmaplatest(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(until:behavior:)":{"role":"symbol","title":"take(until:behavior:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"behavior"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TakeBehavior","preciseIdentifier":"s:7RxSwift12TakeBehaviorO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns elements from an observable sequence until the specified condition is true."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:behavior:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(until:behavior:)"},"doc://RxSwift/documentation/RxSwift/Infallible/deferred(_:)":{"role":"symbol","title":"deferred(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferred"},{"kind":"text","text":"(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an infallible sequence that invokes the specified factory function whenever a new observer subscribes."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/deferred(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/deferred(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/withLatestFrom(_:resultSelector:)":{"role":"symbol","title":"withLatestFrom(_:resultSelector:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withLatestFrom"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ResultType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":", "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResultType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ResultType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges two observable sequences into one observable sequence by combining each element from self with the latest element from the second source, if any."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withLatestFrom(_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/withlatestfrom(_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/just(_:)":{"role":"symbol","title":"just(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"just"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an infallible sequence that contains a single element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/just(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/just(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/concat(_:)":{"role":"symbol","title":"concat(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concat"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Concatenates the second observable sequence to "},{"type":"codeVoice","code":"self"},{"type":"text","text":" upon successful termination of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/concat(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/concat(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/zip(_:_:_:_:_:resultSelector:)":{"role":"symbol","title":"zip(_:_:_:_:_:resultSelector:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E5"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"E1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E5"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges the specified observable sequences into one observable sequence by using the selector function whenever all of the observable sequences have produced an element at a corresponding index."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/zip(_:_:_:_:_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/zip(_:_:_:_:_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/merge(_:)-2fcyk":{"role":"symbol","title":"merge(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Collection"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Merges elements from all observable sequences from collection into a single observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/merge(_:)-2fcyk","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/merge(_:)-2fcyk"},"doc://RxSwift/documentation/RxSwift/Infallible/withUnretained(_:resultSelector:)":{"role":"symbol","title":"withUnretained(_:resultSelector:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnretained"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Out"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":", "},{"kind":"externalParam","text":"resultSelector"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Out"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Out"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withUnretained(_:resultSelector:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/withunretained(_:resultselector:)"},"doc://RxSwift/documentation/RxSwift/Infallible/startWith(_:)":{"role":"symbol","title":"startWith(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startWith"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Prepends a value to an observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/startWith(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/startwith(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(while:behavior:)":{"role":"symbol","title":"take(while:behavior:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"behavior"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TakeBehavior","preciseIdentifier":"s:7RxSwift12TakeBehaviorO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns elements from an observable sequence as long as a specified condition is true."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(while:behavior:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(while:behavior:)"},"doc://RxSwift/documentation/RxSwift/Infallible/take(until:)-9t29":{"role":"symbol","title":"take(until:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the elements from the source observable sequence until the other observable sequence produces an element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/take(until:)-9t29","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/take(until:)-9t29"},"doc://RxSwift/documentation/RxSwift/Infallible/compactMap(_:)":{"role":"symbol","title":"compactMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence into an optional form and filters all optional results."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/compactMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/compactmap(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/distinctUntilChanged(_:comparer:)":{"role":"symbol","title":"distinctUntilChanged(_:comparer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"distinctUntilChanged"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"K"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comparer"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that contains only distinct contiguous elements according to the keySelector and the comparer."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/distinctUntilChanged(_:comparer:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/distinctuntilchanged(_:comparer:)"},"doc://RxSwift/documentation/RxSwift/Infallible/withUnretained(_:)":{"role":"symbol","title":"withUnretained(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnretained"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")>"}],"abstract":[{"type":"text","text":"Provides an unretained, safe to use (i.e. not implicitly unwrapped), reference to an object along with the events emitted by the sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/withUnretained(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/withunretained(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/flatMapFirst(_:)":{"role":"symbol","title":"flatMapFirst(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMapFirst"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence."},{"type":"text","text":" "},{"type":"text","text":"If element is received while there is some projected observable sequence being merged it will simply be ignored."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMapFirst(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/flatmapfirst(_:)"},"doc://RxSwift/documentation/RxSwift/Infallible/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Source"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Infallible","preciseIdentifier":"s:7RxSwift10InfallibleV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Projects each element of an observable sequence to an observable sequence and merges the resulting observable sequences into one observable sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Infallible\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/infallible\/flatmap(_:)"}}}