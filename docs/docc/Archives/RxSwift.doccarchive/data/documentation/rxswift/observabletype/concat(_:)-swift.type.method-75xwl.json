{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concat"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Sequence"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"sequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Observable","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Observable","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An observable sequence that contains the elements of each given sequence, in sequential order."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator has tail recursive optimizations that will prevent stack overflow."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Optimizations will be performed in cases equivalent to following:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"[1, [2, [3, â€¦..].concat()].concat].concat()"}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswift\/observabletype\/concat(_:)-swift.type.method-75xwl"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableType\/concat(_:)-swift.type.method-75xwl","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully."}],"kind":"symbol","metadata":{"role":"symbol","title":"concat(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concat"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Sequence"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:7RxSwift14ObservableTypePAAE6concatyAA0C0Cy7ElementQzGqd__STRd__AiGRtd__lFZ","extendedModule":"RxSwift","modules":[{"name":"RxSwift"}]},"hierarchy":{"paths":[["doc:\/\/RxSwift\/documentation\/RxSwift","doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableType"]]},"references":{"doc://RxSwift/documentation/RxSwift":{"role":"collection","title":"RxSwift","abstract":[],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift","kind":"symbol","type":"topic","url":"\/documentation\/rxswift"},"doc://RxSwift/documentation/RxSwift/ObservableType/concat(_:)-swift.type.method-75xwl":{"role":"symbol","title":"concat(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"concat"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Sequence"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Concatenates all observable sequences in the given sequence, as long as the previous observable sequence terminated successfully."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableType\/concat(_:)-swift.type.method-75xwl","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/observabletype\/concat(_:)-swift.type.method-75xwl"},"doc://RxSwift/documentation/RxSwift/ObservableType":{"role":"symbol","title":"ObservableType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableType"}],"abstract":[{"type":"text","text":"Represents a push style sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableType"}],"url":"\/documentation\/rxswift\/observabletype"},"doc://RxSwift/documentation/RxSwift/Observable":{"role":"symbol","title":"Observable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observable"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"ObservableType"},{"type":"text","text":"."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/Observable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Observable"}],"url":"\/documentation\/rxswift\/observable"}}}