{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrimitiveSequence"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Trait"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswift\/primitivesequence"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableConvertibleType","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequenceType"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Observable sequences containing 0 or 1 element."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrimitiveSequence"}],"title":"PrimitiveSequence","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:7RxSwift17PrimitiveSequenceV","modules":[{"name":"RxSwift"}],"navigatorTitle":[{"kind":"identifier","text":"PrimitiveSequence"}]},"hierarchy":{"paths":[["doc:\/\/RxSwift\/documentation\/RxSwift"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/catch(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/catchError(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/debug(_:trimOutput:file:line:function:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/delay(_:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/delaySubscription(_:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/observe(on:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/observeOn(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(when:)-1avjh","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(when:)-5cuc5","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retryWhen(_:)-3ua4g","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retryWhen(_:)-q7bu","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/subscribe(on:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/subscribeOn(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/timeout(_:other:scheduler:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/timeout(_:scheduler:)"]},{"title":"Type Methods","identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/deferred(_:)","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/using(_:primitiveSequenceFactory:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/PrimitiveSequenceType-Implementations","doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/ObservableConvertibleType-Implementations"],"generated":true}],"references":{"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/observeOn(_:)":{"role":"symbol","title":"observeOn(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeOn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ImmediateSchedulerType","preciseIdentifier":"s:7RxSwift22ImmediateSchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Wraps the source sequence in order to run its observer callbacks on the specified scheduler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/observeOn(_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/rxswift\/primitivesequence\/observeon(_:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/debug(_:trimOutput:file:line:function:)":{"role":"symbol","title":"debug(_:trimOutput:file:line:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"trimOutput"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Prints received events for all observers on standard output."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/debug(_:trimOutput:file:line:function:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/debug(_:trimoutput:file:line:function:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/timeout(_:scheduler:)":{"role":"symbol","title":"timeout(_:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeout"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Applies a timeout policy for each element in the observable sequence. If the next element isn’t received within the specified timeout duration starting from its predecessor, a TimeoutError is propagated to the observer."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/timeout(_:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/timeout(_:scheduler:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/using(_:primitiveSequenceFactory:)":{"role":"symbol","title":"using(_:primitiveSequenceFactory:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"using"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Resource"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":", "},{"kind":"externalParam","text":"primitiveSequenceFactory"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Constructs an observable sequence that depends on a resource object, whose lifetime is tied to the resulting observable sequence’s lifetime."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/using(_:primitiveSequenceFactory:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/using(_:primitivesequencefactory:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/retry(when:)-5cuc5":{"role":"symbol","title":"retry(when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TriggerObservable"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">("},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"TriggerObservable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Repeats the source observable sequence on error when the notifier emits a next value."},{"type":"text","text":" "},{"type":"text","text":"If the source observable errors and the notifier completes, it will complete the source sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(when:)-5cuc5","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/retry(when:)-5cuc5"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence":{"role":"symbol","title":"PrimitiveSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrimitiveSequence"}],"abstract":[{"type":"text","text":"Observable sequences containing 0 or 1 element."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrimitiveSequence"}],"url":"\/documentation\/rxswift\/primitivesequence"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequenceType":{"role":"symbol","title":"PrimitiveSequenceType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrimitiveSequenceType"}],"abstract":[{"type":"text","text":"Observable sequences containing 0 or 1 element"}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequenceType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrimitiveSequenceType"}],"url":"\/documentation\/rxswift\/primitivesequencetype"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/retry(_:)":{"role":"symbol","title":"retry(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"If the initial subscription to the observable sequence emits an error event, try repeating it up to the specified number of attempts (inclusive of the initial attempt) or until is succeeds. For example, if you want to retry a sequence once upon failure, you should use retry(2) (once for the initial attempt, and once for the retry)."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/retry(_:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/timeout(_:other:scheduler:)":{"role":"symbol","title":"timeout(_:other:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timeout"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Applies a timeout policy for each element in the observable sequence, using the specified scheduler to run timeout timers. If the next element isn’t received within the specified timeout duration starting from its predecessor, the other observable sequence is used to produce future messages from that point on."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/timeout(_:other:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/timeout(_:other:scheduler:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/PrimitiveSequenceType-Implementations":{"role":"collectionGroup","title":"PrimitiveSequenceType Implementations","abstract":[],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/PrimitiveSequenceType-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/primitivesequencetype-implementations"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/delaySubscription(_:scheduler:)":{"role":"symbol","title":"delaySubscription(_:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delaySubscription"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Time shifts the observable sequence by delaying the subscription with the specified relative time duration, using the specified scheduler to run timers."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/delaySubscription(_:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/delaysubscription(_:scheduler:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/delay(_:scheduler:)":{"role":"symbol","title":"delay(_:scheduler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"delay"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RxTimeInterval","preciseIdentifier":"s:7RxSwift0A12TimeIntervala"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SchedulerType","preciseIdentifier":"s:7RxSwift13SchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence by the source observable sequence shifted forward in time by a specified delay. Error events from the source observable sequence are not delayed."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/delay(_:scheduler:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/delay(_:scheduler:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/catch(_:)":{"role":"symbol","title":"catch(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`catch`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/catch(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/catch(_:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/ObservableConvertibleType-Implementations":{"role":"collectionGroup","title":"ObservableConvertibleType Implementations","abstract":[],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/ObservableConvertibleType-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/observableconvertibletype-implementations"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/deferred(_:)":{"role":"symbol","title":"deferred(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferred"},{"kind":"text","text":"(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns an observable sequence that invokes the specified factory function whenever a new observer subscribes."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/deferred(_:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/deferred(_:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/subscribeOn(_:)":{"role":"symbol","title":"subscribeOn(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribeOn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ImmediateSchedulerType","preciseIdentifier":"s:7RxSwift22ImmediateSchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Wraps the source sequence in order to run its subscription and unsubscription logic on the specified"},{"type":"text","text":" "},{"type":"text","text":"scheduler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/subscribeOn(_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/rxswift\/primitivesequence\/subscribeon(_:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/retry(when:)-1avjh":{"role":"symbol","title":"retry(when:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retry"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TriggerObservable"},{"kind":"text","text":">("},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"TriggerObservable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Repeats the source observable sequence on error when the notifier emits a next value."},{"type":"text","text":" "},{"type":"text","text":"If the source observable errors and the notifier completes, it will complete the source sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retry(when:)-1avjh","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/retry(when:)-1avjh"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/subscribe(on:)":{"role":"symbol","title":"subscribe(on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ImmediateSchedulerType","preciseIdentifier":"s:7RxSwift22ImmediateSchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Wraps the source sequence in order to run its subscription and unsubscription logic on the specified"},{"type":"text","text":" "},{"type":"text","text":"scheduler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/subscribe(on:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/subscribe(on:)"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/retryWhen(_:)-3ua4g":{"role":"symbol","title":"retryWhen(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retryWhen"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TriggerObservable"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"TriggerObservable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Repeats the source observable sequence on error when the notifier emits a next value."},{"type":"text","text":" "},{"type":"text","text":"If the source observable errors and the notifier completes, it will complete the source sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retryWhen(_:)-3ua4g","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/rxswift\/primitivesequence\/retrywhen(_:)-3ua4g"},"doc://RxSwift/documentation/RxSwift":{"role":"collection","title":"RxSwift","abstract":[],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift","kind":"symbol","type":"topic","url":"\/documentation\/rxswift"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/retryWhen(_:)-q7bu":{"role":"symbol","title":"retryWhen(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retryWhen"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TriggerObservable"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"TriggerObservable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Repeats the source observable sequence on error when the notifier emits a next value."},{"type":"text","text":" "},{"type":"text","text":"If the source observable errors and the notifier completes, it will complete the source sequence."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/retryWhen(_:)-q7bu","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/rxswift\/primitivesequence\/retrywhen(_:)-q7bu"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/observe(on:)":{"role":"symbol","title":"observe(on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ImmediateSchedulerType","preciseIdentifier":"s:7RxSwift22ImmediateSchedulerTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Wraps the source sequence in order to run its observer callbacks on the specified scheduler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/observe(on:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswift\/primitivesequence\/observe(on:)"},"doc://RxSwift/documentation/RxSwift/ObservableConvertibleType":{"role":"symbol","title":"ObservableConvertibleType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableConvertibleType"}],"abstract":[{"type":"text","text":"Type that can be converted to observable sequence ("},{"type":"codeVoice","code":"Observable<Element>"},{"type":"text","text":")."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/ObservableConvertibleType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableConvertibleType"}],"url":"\/documentation\/rxswift\/observableconvertibletype"},"doc://RxSwift/documentation/RxSwift/PrimitiveSequence/catchError(_:)":{"role":"symbol","title":"catchError(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"catchError"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"PrimitiveSequence","preciseIdentifier":"s:7RxSwift17PrimitiveSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trait"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Continues an observable sequence that is terminated by an error with the observable sequence produced by the handler."}],"identifier":"doc:\/\/RxSwift\/documentation\/RxSwift\/PrimitiveSequence\/catchError(_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/rxswift\/primitivesequence\/catcherror(_:)"}}}