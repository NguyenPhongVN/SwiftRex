{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"dispatcher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV","text":"ActionSource"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/GetState","preciseIdentifier":"s:8SwiftRex8GetStatea","text":"GetState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO","preciseIdentifier":"s:8SwiftRex2IOV","text":"IO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO"},{"type":"text","text":" closure where you can run side-effects and dispatch new actions to the store"}]}]},{"kind":"parameters","parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the incoming action to be handled"}]}]},{"name":"dispatcher","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"information about the action source, representing the entity that created and dispatched the action"}]}]},{"name":"state","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a closure that, once called, will return the most up-to-date state. In the scope of this function, the state wasn’t handled by"},{"type":"text","text":" "},{"type":"text","text":"reducers yet, but in the context of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO"},{"type":"text","text":" block you should expect the state to be changed already."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a good place for side-effects such as async tasks, timers, web, database, file access, background execution, access device sensors,"},{"type":"text","text":" "},{"type":"text","text":"perform analytics, tracking, logging and telemetry. You can schedule tasks to run after the reducer changed the global state, this will happen"},{"type":"text","text":" "},{"type":"text","text":"in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO"},{"type":"text","text":" closure you must return from this function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case no side-effect is required for certain action, returning "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO\/pure()"},{"type":"text","text":" should suffice."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can only dispatch new actions to the store from inside the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO"},{"type":"text","text":" closure."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"IMPORTANT:"}]}]},{"type":"text","text":" this will be called on the main queue, never perform expensive work on it. You should perform side-effects only in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO"},{"type":"text","text":" block and care about running things in background. You don’t have to return to the main queue to dispatch actions, however, the store"},{"type":"text","text":" "},{"type":"text","text":"will take care of that."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/anymiddleware\/handle(action:from:state:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyMiddleware\/handle(action:from:state:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Handles the incoming actions and may or not start async tasks, check the latest state at any point or dispatch additional actions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IO","preciseIdentifier":"s:8SwiftRex2IOV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"title":"handle(action:from:state:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:8SwiftRex13AnyMiddlewareV6handle6action4from5stateAA2IOVyq_Gx_AA12ActionSourceVq0_yctF","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyMiddleware"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/AnyMiddleware":{"role":"symbol","title":"AnyMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyMiddleware"}],"abstract":[{"type":"text","text":"Erases the protocol "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":". Please check its documentation for more information."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyMiddleware"}],"url":"\/documentation\/swiftrex\/anymiddleware"},"doc://SwiftRex/documentation/SwiftRex/ActionSource":{"role":"symbol","title":"ActionSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionSource"}],"abstract":[{"type":"text","text":"Representation of the entity responsible for creating and dispatching the action, including information useful for logging, debugging, analytics"},{"type":"text","text":" "},{"type":"text","text":"or monitoring. The action source will be implicitly created when "},{"type":"codeVoice","code":"ActionHandler.dispatch"},{"type":"text","text":" is called from a middleware, view or presenter, and"},{"type":"text","text":" "},{"type":"text","text":"it will contain the file, function and line from where the dispatch function was called. Additionally you can append extra information useful"},{"type":"text","text":" "},{"type":"text","text":"for debugging, as an optional String attached to the ActionSource."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionSource"}],"url":"\/documentation\/swiftrex\/actionsource"},"doc://SwiftRex/documentation/SwiftRex/IO":{"role":"symbol","title":"IO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IO"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IO"}],"url":"\/documentation\/swiftrex\/io"},"doc://SwiftRex/documentation/SwiftRex/IO/pure()":{"role":"symbol","title":"pure()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pure"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IO","preciseIdentifier":"s:8SwiftRex2IOV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IO\/pure()","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/io\/pure()"},"doc://SwiftRex/documentation/SwiftRex/AnyMiddleware/handle(action:from:state:)":{"role":"symbol","title":"handle(action:from:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IO","preciseIdentifier":"s:8SwiftRex2IOV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Handles the incoming actions and may or not start async tasks, check the latest state at any point or dispatch additional actions."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyMiddleware\/handle(action:from:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/anymiddleware\/handle(action:from:state:)"},"doc://SwiftRex/documentation/SwiftRex/GetState":{"role":"symbol","title":"GetState","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"GetState"}],"abstract":[{"type":"text","text":"Zero-argument function that returns the current state. "},{"type":"text","text":" "},{"type":"codeVoice","code":"() -> StateType"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/GetState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GetState"}],"url":"\/documentation\/swiftrex\/getstate"}}}