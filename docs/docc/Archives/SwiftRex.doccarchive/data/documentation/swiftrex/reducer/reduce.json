{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona","text":"MutableReduceFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/reducer\/reduce"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/reduce","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Execute the wrapped reduce function. You must provide the parameters "},{"type":"codeVoice","code":"action: ActionType"},{"type":"text","text":" (the action to be"},{"type":"text","text":" "},{"type":"text","text":"evaluated during the reducing process) and an "},{"type":"codeVoice","code":"inout"},{"type":"text","text":" version of the latest "},{"type":"codeVoice","code":"state: StateType"},{"type":"text","text":", (the current"},{"type":"text","text":" "},{"type":"text","text":"state in your single source-of-truth)."},{"type":"text","text":" "},{"type":"text","text":"State will be mutated in place ("},{"type":"codeVoice","code":"inout"},{"type":"text","text":") and finish with the calculated new state."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"title":"reduce","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:8SwiftRex7ReducerV6reduceyyx_q_ztcvp","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer"]]},"references":{"doc://SwiftRex/documentation/SwiftRex/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" is a pure function wrapped in a monoid container, that takes an action and the current state to calculate the new state."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/swiftrex\/reducer"},"doc://SwiftRex/documentation/SwiftRex/Reducer/reduce":{"role":"symbol","title":"reduce","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Execute the wrapped reduce function. You must provide the parameters "},{"type":"codeVoice","code":"action: ActionType"},{"type":"text","text":" (the action to be"},{"type":"text","text":" "},{"type":"text","text":"evaluated during the reducing process) and an "},{"type":"codeVoice","code":"inout"},{"type":"text","text":" version of the latest "},{"type":"codeVoice","code":"state: StateType"},{"type":"text","text":", (the current"},{"type":"text","text":" "},{"type":"text","text":"state in your single source-of-truth)."},{"type":"text","text":" "},{"type":"text","text":"State will be mutated in place ("},{"type":"codeVoice","code":"inout"},{"type":"text","text":") and finish with the calculated new state."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/reduce","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reducer\/reduce"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/MutableReduceFunction":{"role":"symbol","title":"MutableReduceFunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableReduceFunction"}],"abstract":[{"type":"text","text":"State reducer: takes inout version of the current state and an action, computes the new state changing the provided mutable state. "},{"type":"text","text":" "},{"type":"codeVoice","code":"(ActionType, inout StateType) -> Void"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MutableReduceFunction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableReduceFunction"}],"url":"\/documentation\/swiftrex\/mutablereducefunction"}}}