{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"reduce"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona","text":"MutableReduceFunction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"reduce","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a pure function that is gonna be wrapped in a monoid container, and that calculates the new state from"},{"type":"text","text":" "},{"type":"text","text":"an action and the old state."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/reducer\/reduce(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/reduce(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Reducer initializer takes only the underlying function "},{"type":"codeVoice","code":"(ActionType, inout StateType) -> Void"},{"type":"text","text":" that is the reducer"},{"type":"text","text":" "},{"type":"text","text":"function itself."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"title":"reduce(_:)","roleHeading":"Type Method","role":"symbol","symbolKind":"method","externalID":"s:8SwiftRex7ReducerV6reduceyACyxq_Gyx_q_ztcFZ","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" is a pure function wrapped in a monoid container, that takes an action and the current state to calculate the new state."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/swiftrex\/reducer"},"doc://SwiftRex/documentation/SwiftRex/Reducer/reduce(_:)":{"role":"symbol","title":"reduce(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MutableReduceFunction","preciseIdentifier":"s:8SwiftRex21MutableReduceFunctiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reducer initializer takes only the underlying function "},{"type":"codeVoice","code":"(ActionType, inout StateType) -> Void"},{"type":"text","text":" that is the reducer"},{"type":"text","text":" "},{"type":"text","text":"function itself."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/reduce(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reducer\/reduce(_:)"},"doc://SwiftRex/documentation/SwiftRex/MutableReduceFunction":{"role":"symbol","title":"MutableReduceFunction","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableReduceFunction"}],"abstract":[{"type":"text","text":"State reducer: takes inout version of the current state and an action, computes the new state changing the provided mutable state. "},{"type":"text","text":" "},{"type":"codeVoice","code":"(ActionType, inout StateType) -> Void"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MutableReduceFunction","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableReduceFunction"}],"url":"\/documentation\/swiftrex\/mutablereducefunction"}}}