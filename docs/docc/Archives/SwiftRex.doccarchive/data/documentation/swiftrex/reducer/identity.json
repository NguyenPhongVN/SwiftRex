{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV","text":"Reducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Therefore:"}]},{"type":"codeListing","syntax":null,"code":["   Reducer<ActionType, StateType> <> .identity","== .identity <> Reducer<ActionType, StateType>","== Reducer<ActionType, StateType>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The implementation of this reducer, as one should expect, simply ignores the action and returns the state unchanged"}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/reducer\/identity"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/identity","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Neutral monoidal container. Composing any monoid with an "},{"type":"codeVoice","code":"identity"},{"type":"text","text":" monoid should result in a function unchanged,"},{"type":"text","text":" "},{"type":"text","text":"regardless if the identity element is on the left-hand side or the right-hand side or this composition."}],"kind":"symbol","metadata":{"role":"symbol","title":"identity","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"symbolKind":"property","externalID":"s:8SwiftRex7ReducerV8identityACyxq_GvpZ","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/Monoid-Implementations"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/Reducer/Monoid-Implementations":{"role":"collectionGroup","title":"Monoid Implementations","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/Monoid-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftrex\/reducer\/monoid-implementations"},"doc://SwiftRex/documentation/SwiftRex/Reducer/identity":{"role":"symbol","title":"identity","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Neutral monoidal container. Composing any monoid with an "},{"type":"codeVoice","code":"identity"},{"type":"text","text":" monoid should result in a function unchanged,"},{"type":"text","text":" "},{"type":"text","text":"regardless if the identity element is on the left-hand side or the right-hand side or this composition."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer\/identity","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reducer\/identity"},"doc://SwiftRex/documentation/SwiftRex/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"codeVoice","code":"Reducer"},{"type":"text","text":" is a pure function wrapped in a monoid container, that takes an action and the current state to calculate the new state."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/swiftrex\/reducer"}}}