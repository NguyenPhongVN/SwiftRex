{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"projection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":" "},{"kind":"internalParam","text":"viewActionToGlobalAction"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":" "},{"kind":"internalParam","text":"globalStateToViewState"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection","preciseIdentifier":"s:8SwiftRex15StoreProjectiona","text":"StoreProjection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection"},{"type":"text","text":" struct, that uses the original Store under the hood, by applying the required transformations on state and"},{"type":"text","text":" "},{"type":"text","text":"action when app state changes or view actions arrive. It doesn’t store anything, just proxies the original store."}]}]},{"kind":"parameters","parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a closure that will transform the View Actions into global App Actions, to be dispatched in the original Store"}]}]},{"name":"state","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a closure that will transform the global App State into the View State, to subscribe the original Store and drive the View upon"},{"type":"text","text":" "},{"type":"text","text":"changes"}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/anystoretype\/projection(action:state:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType\/projection(action:state:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a subset of the current store by applying any transformation to the State or Action types."}],"kind":"symbol","metadata":{"role":"symbol","title":"projection(action:state:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"projection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StoreProjection","preciseIdentifier":"s:8SwiftRex15StoreProjectiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:8SwiftRex9StoreTypePAAE10projection6action5stateAA03AnycD0Vyqd__qd_0_G06ActionD0QzSgqd__c_qd_0_05StateD0Qzctr0_lF::SYNTHESIZED::s:8SwiftRex12AnyStoreTypeV","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType","doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType\/StoreType-Implementations"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/StoreProjection":{"role":"symbol","title":"StoreProjection","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreProjection"}],"abstract":[{"type":"text","text":"An app should have a single real Store, holding a single source-of-truth. However, we can “derive” this store to small subsets, called store"},{"type":"text","text":" "},{"type":"text","text":"projections, that will handle either a smaller part of the state or action tree, or even a completely different type of actions and states as"},{"type":"text","text":" "},{"type":"text","text":"long as we can map back-and-forth to the original store types. It won’t store anything, only project the original store. For example, a View can"},{"type":"text","text":" "},{"type":"text","text":"define a completely custom View State and View Action, and we can create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection"},{"type":"text","text":" that works on these types, as long as it’s backed"},{"type":"text","text":" "},{"type":"text","text":"by a real store which State and Action types can be mapped somehow to the View State and View Action types. The Store Projection will take care"},{"type":"text","text":" "},{"type":"text","text":"of translating these entities."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreProjection"}],"url":"\/documentation\/swiftrex\/storeprojection"},"doc://SwiftRex/documentation/SwiftRex/AnyStoreType":{"role":"symbol","title":"AnyStoreType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyStoreType"}],"abstract":[{"type":"text","text":"Type-erasure for the protocol "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyStoreType"}],"url":"\/documentation\/swiftrex\/anystoretype"},"doc://SwiftRex/documentation/SwiftRex/StoreType":{"role":"symbol","title":"StoreType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreType"}],"abstract":[{"type":"text","text":"A protocol that defines the two expected roles of a “Store”: receive\/distribute actions ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionHandler"},{"type":"text","text":"); and publish changes of the the"},{"type":"text","text":" "},{"type":"text","text":"current app state ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StateProvider"},{"type":"text","text":") to possible subscribers. It can be a real store (such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase"},{"type":"text","text":") or just a “proxy” that acts on"},{"type":"text","text":" "},{"type":"text","text":"behalf of a real store, for example, in the case of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreType"}],"url":"\/documentation\/swiftrex\/storetype"},"doc://SwiftRex/documentation/SwiftRex/AnyStoreType/StoreType-Implementations":{"role":"collectionGroup","title":"StoreType Implementations","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType\/StoreType-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftrex\/anystoretype\/storetype-implementations"},"doc://SwiftRex/documentation/SwiftRex/AnyStoreType/projection(action:state:)":{"role":"symbol","title":"projection(action:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"projection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StoreProjection","preciseIdentifier":"s:8SwiftRex15StoreProjectiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a subset of the current store by applying any transformation to the State or Action types."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStoreType\/projection(action:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/anystoretype\/projection(action:state:)"}}}