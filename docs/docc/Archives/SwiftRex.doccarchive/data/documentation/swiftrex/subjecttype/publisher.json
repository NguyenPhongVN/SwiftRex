{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType","preciseIdentifier":"s:8SwiftRex13PublisherTypeV","text":"PublisherType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/subjecttype\/publisher"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubjectType\/publisher","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Upstream publisher that feeds events into this subject"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PublisherType","preciseIdentifier":"s:8SwiftRex13PublisherTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">"}],"title":"publisher","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:8SwiftRex11SubjectTypeV9publisherAA09PublisherD0Vyxq_Gvp","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubjectType"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/SubjectType/publisher":{"role":"symbol","title":"publisher","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PublisherType","preciseIdentifier":"s:8SwiftRex13PublisherTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Upstream publisher that feeds events into this subject"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubjectType\/publisher","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subjecttype\/publisher"},"doc://SwiftRex/documentation/SwiftRex/PublisherType":{"role":"symbol","title":"PublisherType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherType"}],"abstract":[{"type":"text","text":"Abstraction over publisher\/observable\/signal producer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherType"}],"url":"\/documentation\/swiftrex\/publishertype"},"doc://SwiftRex/documentation/SwiftRex/SubjectType":{"role":"symbol","title":"SubjectType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubjectType"}],"abstract":[{"type":"text","text":"Abstraction over passthrough subject types ("},{"type":"codeVoice","code":"PassthroughSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"PublishSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":") from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubjectType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubjectType"}],"url":"\/documentation\/swiftrex\/subjecttype"}}}