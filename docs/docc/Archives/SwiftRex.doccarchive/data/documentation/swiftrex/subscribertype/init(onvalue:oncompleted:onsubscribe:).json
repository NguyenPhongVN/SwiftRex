{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onValue"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil, "},{"kind":"externalParam","text":"onSubscribe"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP","text":"SubscriptionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil)"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"onValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure to handle new values received"}]}]},{"name":"onCompleted","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure to handle completion, which has an optional error in case the completion happened due to an error being emitted"}]}]},{"name":"onSubscribe","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure to handle subscription event"}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/subscribertype\/init(onvalue:oncompleted:onsubscribe:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/init(onValue:onCompleted:onSubscribe:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol-witness of a subscriber. Configure the behaviour of this wrapper from a concrete implementation from your favourite reactive"},{"type":"text","text":" "},{"type":"text","text":"framework."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onValue"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onSubscribe"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"title":"init(onValue:onCompleted:onSubscribe:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:8SwiftRex14SubscriberTypeV7onValue0E9Completed0E9SubscribeACyxq_GyxcSg_yq_SgcSgyAA012SubscriptionD0_pcSgtcfc","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType"]]},"references":{"doc://SwiftRex/documentation/SwiftRex/SubscriberType":{"role":"symbol","title":"SubscriberType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriberType"}],"abstract":[{"type":"text","text":"Abstraction over subscriber\/observer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubscriberType"}],"url":"\/documentation\/swiftrex\/subscribertype"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/SubscriptionType":{"role":"symbol","title":"SubscriptionType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriptionType"}],"abstract":[{"type":"text","text":"Abstraction over subscription types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriptionType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubscriptionType"}],"url":"\/documentation\/swiftrex\/subscriptiontype"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType/init(onValue:onCompleted:onSubscribe:)":{"role":"symbol","title":"init(onValue:onCompleted:onSubscribe:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onValue"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onSubscribe"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Protocol-witness of a subscriber. Configure the behaviour of this wrapper from a concrete implementation from your favourite reactive"},{"type":"text","text":" "},{"type":"text","text":"framework."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/init(onValue:onCompleted:onSubscribe:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/init(onvalue:oncompleted:onsubscribe:)"}}}