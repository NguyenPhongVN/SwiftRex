{"variants":[{"paths":["\/documentation\/swiftrex\/middlewarereader\/middlewarereaderprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/MiddlewareReaderProtocol-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"SwiftRex"}],"role":"collectionGroup","title":"MiddlewareReaderProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader"]]},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/__(_:_:)-1uyrg","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/__(_:_:)-8kvd0"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/contramapDependecies(_:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/dimap(transformMiddleware:extractOnlyDependenciesNeededForThisMiddleware:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/flatMap(_:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:state:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:state:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:state:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:state:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:state:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:state:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(state:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(state:dependencies:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/mapMiddleware(_:)"],"generated":true},{"title":"Type Properties","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/identity-2kzce","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/identity-8wdkf"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/pure(_:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:with:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:with:)"],"generated":true}],"references":{"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(outputAction:)":{"role":"symbol","title":"lift(outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(outputaction:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:outputAction:state:dependencies:)":{"role":"symbol","title":"lift(inputAction:outputAction:state:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:state:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:outputaction:state:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/contramapDependecies(_:)":{"role":"symbol","title":"contramapDependecies(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contramapDependecies"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"World"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"World"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"World"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Maps the "},{"type":"codeVoice","code":"Dependencies"},{"type":"text","text":" element, which is the input environment of the calculation for a particular middleware, using a contravariant"},{"type":"text","text":" "},{"type":"text","text":"function that will allow to lift this reader into a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" compatible with a more global dependencies structure."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/contramapDependecies(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/contramapdependecies(_:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddlewareReader"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"}],"abstract":[{"type":"text","text":"Having a MiddlewareReader mapping that results in another MiddlewareReader that also depends on same environment, we can flatten up"},{"type":"text","text":" "},{"type":"text","text":"the map by using the same environment to inject in both MiddlewareReaders. Useful when there’s a chain of dependencies"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/flatmap(_:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(state:)":{"role":"symbol","title":"lift(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(state:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:dependencies:)":{"role":"symbol","title":"lift(inputAction:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/pure(_:)":{"role":"symbol","title":"pure(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pure"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Wraps a pure function in a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" container just for the sake of composition. Nothing is actually needed for the calculation and"},{"type":"text","text":" "},{"type":"text","text":"injected dependency will be ignored. This is useful for lifting a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":", so you can compose with other"},{"type":"text","text":" "},{"type":"text","text":"MiddlewareReaders that actually depend on dependencies."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/pure(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/pure(_:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/identity-8wdkf":{"conformance":{"constraints":[{"type":"codeVoice","code":"MiddlewareType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Monoid"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"identity","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"An identity MiddlewareReader ignores whatever Dependencies are given and simply return an identity Middleware. Composing any given middleware"},{"type":"text","text":" "},{"type":"text","text":"reader “A” with the identity middleware reader will be exactly the same as composing in the other order and also exactly the same as only the"},{"type":"text","text":" "},{"type":"text","text":"middleware reader “A” alone, which means, it doesn’t change anything in the MiddlewareReader “A” or its resulting Middleware, regardless of"},{"type":"text","text":" "},{"type":"text","text":"the order it was composed to."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/identity-8wdkf","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/identity-8wdkf"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:outputAction:)":{"role":"symbol","title":"lift(inputAction:outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:outputaction:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/__(_:_:)-8kvd0":{"conformance":{"constraints":[{"type":"codeVoice","code":"MiddlewareType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Semigroup"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"<>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<>"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Compose two Semigroup Middlewares into one, before even materializing them into real instances."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/__(_:_:)-8kvd0","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/__(_:_:)-8kvd0"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M9"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M9"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M9"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:)":{"role":"symbol","title":"lift(inputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(outputAction:state:dependencies:)":{"role":"symbol","title":"lift(outputAction:state:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:state:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(outputaction:state:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/dimap(transformMiddleware:extractOnlyDependenciesNeededForThisMiddleware:)":{"role":"symbol","title":"dimap(transformMiddleware:extractOnlyDependenciesNeededForThisMiddleware:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dimap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddleware"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"World"},{"kind":"text","text":">("},{"kind":"externalParam","text":"transformMiddleware"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddleware"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extractOnlyDependenciesNeededForThisMiddleware"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"World"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"World"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewMiddleware"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Maps the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" element that will eventually be produced upon dependency injection, and derives into a new "},{"type":"codeVoice","code":"Middleware"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/dimap(transformMiddleware:extractOnlyDependenciesNeededForThisMiddleware:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/dimap(transformmiddleware:extractonlydependenciesneededforthismiddleware:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/identity-2kzce":{"role":"symbol","title":"identity","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"An identity MiddlewareReader ignores whatever Dependencies are given and simply return an identity Middleware. Composing any given middleware"},{"type":"text","text":" "},{"type":"text","text":"reader “A” with the identity middleware reader will be exactly the same as composing in the other order and also exactly the same as only the"},{"type":"text","text":" "},{"type":"text","text":"middleware reader “A” alone, which means, it doesn’t change anything in the MiddlewareReader “A” or its resulting Middleware, regardless of"},{"type":"text","text":" "},{"type":"text","text":"the order it was composed to."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/identity-2kzce","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/identity-2kzce"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(outputAction:dependencies:)":{"role":"symbol","title":"lift(outputAction:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(outputaction:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(dependencies:)":{"role":"symbol","title":"lift(dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:outputAction:state:)":{"role":"symbol","title":"lift(inputAction:outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:outputaction:state:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/mapMiddleware(_:)":{"role":"symbol","title":"mapMiddleware(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddleware"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddleware"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewMiddleware"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Maps the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" element that will eventually be produced upon dependency injection, and derives into a new "},{"type":"codeVoice","code":"Middleware"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/mapMiddleware(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/mapmiddleware(_:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(outputAction:state:)":{"role":"symbol","title":"lift(outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(outputAction:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(outputaction:state:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/__(_:_:)-1uyrg":{"role":"symbol","title":"<>(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<>"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"OtherMiddleware"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OtherMiddleware"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ComposedMiddleware","preciseIdentifier":"s:8SwiftRex18ComposedMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"Compose two Middlewares that are not officially Semigroups and not necessarily the same Middleware type, into a "},{"type":"codeVoice","code":"ComposedMiddleware"},{"type":"text","text":" that"},{"type":"text","text":" "},{"type":"text","text":"holds both before even materializing them into real instances."},{"type":"text","text":" "},{"type":"text","text":"As most Middlewares don’t need to return "},{"type":"codeVoice","code":"Self"},{"type":"text","text":" when grouped together, and it’s perfectly reasonable to compose middlewares of different"},{"type":"text","text":" "},{"type":"text","text":"types, this option is more flexible than the Semigroup composition."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/__(_:_:)-1uyrg","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/__(_:_:)-1uyrg"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:with:)":{"role":"symbol","title":"zip(_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader":{"role":"symbol","title":"MiddlewareReader","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareReader"}],"abstract":[{"type":"text","text":"A MiddlewareReader is a way to lazily inject dependencies into a Middleware. For example, you may want to compose multiple middlewares but from"},{"type":"text","text":" "},{"type":"text","text":"a library, and in this library you don’t have the dependencies to inject just yet, because these dependencies are only present in the main target."},{"type":"text","text":" "},{"type":"text","text":"That way, instead of creating the middlewares (which would require all the dependencies), you can wrap their initializers in a MiddlewareReader."},{"type":"text","text":" "},{"type":"text","text":"The middleware reader is not a middleware, is a a factory (in OOP terms) from "},{"type":"codeVoice","code":"(Dependencies) -> MiddlewareType"},{"type":"text","text":" (in FP approach). The benefit"},{"type":"text","text":" "},{"type":"text","text":"of wrapping the middleware initializers in a MiddlewareReader is that, for all means, MiddlewareReaders can be composed as Middlewares, can be"},{"type":"text","text":" "},{"type":"text","text":"lifted as Middlewares, but all of this without in fact creating the Middlewares."},{"type":"text","text":" "},{"type":"text","text":"Your library can then expose a single MiddlewareReader as public, and you keep all its middlewares as internal classes. From the main target you"},{"type":"text","text":" "},{"type":"text","text":"compose this MiddlewareReader with other MiddlewareReaders coming from other libraries and from the main target itself. Somewhere where you create"},{"type":"text","text":" "},{"type":"text","text":"the Store, you finally inject the dependencies at once and you materialize all your middlewares at the same time."},{"type":"text","text":" "},{"type":"text","text":"Remember that “inject then compose” is the same as “compose then inject”, but while the former needs dependencies upfront, the latter is more"},{"type":"text","text":" "},{"type":"text","text":"flexible for being lazy."},{"type":"text","text":" "},{"type":"text","text":"For those familiar with Functional Programming, this is similar to Reader Monad, but as SwiftRex recommends dependencies only on Middlewares,"},{"type":"text","text":" "},{"type":"text","text":"this Reader works specifically with Middlewares."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareReader"}],"url":"\/documentation\/swiftrex\/middlewarereader"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:state:)":{"role":"symbol","title":"lift(inputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:state:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M7"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M8"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M9"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M10"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M9"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M10"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M7"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M8"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M9"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M10"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:outputAction:dependencies:)":{"role":"symbol","title":"lift(inputAction:outputAction:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:outputAction:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:outputaction:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M4"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M5"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M6"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M5"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M6"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/zip(_:_:_:with:)":{"role":"symbol","title":"zip(_:_:_:with:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"zip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M2"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M3"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MOutput"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a MiddlewareReader that combines multiple readers into one, as long as they depend on same environment. Once this environment is"},{"type":"text","text":" "},{"type":"text","text":"injected, upstream readers will run and the result will be a tuple containing the resulting values of each upstream reader. Then you provide"},{"type":"text","text":" "},{"type":"text","text":"a way to combine there resulting Middlewares into one."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/zip(_:_:_:with:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/zip(_:_:_:with:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(state:dependencies:)":{"role":"symbol","title":"lift(state:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(state:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(state:dependencies:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReader/lift(inputAction:state:dependencies:)":{"role":"symbol","title":"lift(inputAction:state:dependencies:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dependencies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalDependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">>"}],"abstract":[{"type":"text","text":"All you need to compose totally different middlewares. Using lift you can match all 4 parameters of a middleware and once they have common"},{"type":"text","text":" "},{"type":"text","text":"ground, you are able to compose them. These 4 parameters are:"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReader\/lift(inputAction:state:dependencies:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereader\/lift(inputaction:state:dependencies:)"}}}