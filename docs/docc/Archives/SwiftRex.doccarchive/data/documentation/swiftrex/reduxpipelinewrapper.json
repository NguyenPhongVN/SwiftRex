{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReduxPipelineWrapper"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MiddlewareType"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol","preciseIdentifier":"s:8SwiftRex18MiddlewareProtocolP","text":"MiddlewareProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/reduxpipelinewrapper"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionHandler"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReduxPipelineWrapper"}],"title":"ReduxPipelineWrapper","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:8SwiftRex20ReduxPipelineWrapperC","modules":[{"name":"SwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"ReduxPipelineWrapper"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/init(state:reducer:middleware:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/init(state:reducer:middleware:emitsValue:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/dispatch(_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/ActionType","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/StateType"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/ActionHandler-Implementations"],"generated":true}],"references":{"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/init(state:reducer:middleware:emitsValue:)":{"role":"symbol","title":"init(state:reducer:middleware:emitsValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"UnfailableReplayLastSubjectType","preciseIdentifier":"s:8SwiftRex31UnfailableReplayLastSubjectTypea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"emitsValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ShouldEmitValue","preciseIdentifier":"s:8SwiftRex15ShouldEmitValueO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/init(state:reducer:middleware:emitsValue:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/init(state:reducer:middleware:emitsvalue:)"},"doc://SwiftRex/documentation/SwiftRex/StoreType":{"role":"symbol","title":"StoreType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreType"}],"abstract":[{"type":"text","text":"A protocol that defines the two expected roles of a “Store”: receive\/distribute actions ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionHandler"},{"type":"text","text":"); and publish changes of the the"},{"type":"text","text":" "},{"type":"text","text":"current app state ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StateProvider"},{"type":"text","text":") to possible subscribers. It can be a real store (such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase"},{"type":"text","text":") or just a “proxy” that acts on"},{"type":"text","text":" "},{"type":"text","text":"behalf of a real store, for example, in the case of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreType"}],"url":"\/documentation\/swiftrex\/storetype"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/ActionType":{"role":"symbol","title":"ReduxPipelineWrapper.ActionType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionType"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/ActionType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionType"}],"url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/actiontype"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/ActionHandler-Implementations":{"role":"collectionGroup","title":"ActionHandler Implementations","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/ActionHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/actionhandler-implementations"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/InputActionType":{"role":"symbol","title":"InputActionType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputActionType"}],"abstract":[{"type":"text","text":"The Action type that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" knows how to handle, so the store will forward actions of this type to this middleware."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/inputactiontype"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/StateType":{"role":"symbol","title":"StateType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateType"}],"abstract":[{"type":"text","text":"The State part that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" needs to read in order to make decisions. This middleware will be able to read the most"},{"type":"text","text":" "},{"type":"text","text":"up-to-date "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType"},{"type":"text","text":" from the store while handling an incoming action, but it can never write or make changes to it."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/statetype"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/dispatch(_:)":{"role":"symbol","title":"dispatch(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DispatchedAction","preciseIdentifier":"s:8SwiftRex16DispatchedActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"The function that allows Views, ViewControllers, Presenters to dispatch actions to the store."},{"type":"text","text":" "},{"type":"text","text":"Also way for a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" to trigger their own actions, usually in response to events or async operations."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/dispatch(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/dispatch(_:)"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/StateType":{"role":"symbol","title":"ReduxPipelineWrapper.StateType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateType"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/StateType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateType"}],"url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/statetype"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/OutputActionType":{"role":"symbol","title":"OutputActionType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputActionType"}],"abstract":[{"type":"text","text":"The Action type that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" will eventually trigger back to the store in response of side-effects. This can be the same"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType"},{"type":"text","text":" or different, in case you want to separate your enum in requests and responses."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/OutputActionType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/outputactiontype"},"doc://SwiftRex/documentation/SwiftRex/ActionHandler":{"role":"symbol","title":"ActionHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionHandler"}],"abstract":[{"type":"codeVoice","code":"ActionHandler"},{"type":"text","text":" defines a protocol for entities able to handle actions - defined by the associated type "},{"type":"codeVoice","code":"ActionType"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionHandler"}],"url":"\/documentation\/swiftrex\/actionhandler"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper/init(state:reducer:middleware:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"MiddlewareType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"MiddlewareType.InputActionType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"MiddlewareType.OutputActionType"},{"type":"text","text":", and "},{"type":"codeVoice","code":"MiddlewareType.StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(state:reducer:middleware:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"UnfailableReplayLastSubjectType","preciseIdentifier":"s:8SwiftRex31UnfailableReplayLastSubjectTypea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"reducer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Reducer","preciseIdentifier":"s:8SwiftRex7ReducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ReduxPipelineWrapper","preciseIdentifier":"s:8SwiftRex20ReduxPipelineWrapperC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper\/init(state:reducer:middleware:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reduxpipelinewrapper\/init(state:reducer:middleware:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" is a plugin, or a composition of several plugins, that are assigned to the app global "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType"},{"type":"text","text":" pipeline in order to"},{"type":"text","text":" "},{"type":"text","text":"handle each action received ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType"},{"type":"text","text":"), to execute side-effects in response, and eventually dispatch more actions"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/OutputActionType"},{"type":"text","text":") in the process. It can also access the most up-to-date "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType"},{"type":"text","text":" while handling an incoming action."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/swiftrex\/middlewareprotocol"},"doc://SwiftRex/documentation/SwiftRex/ReduxPipelineWrapper":{"role":"symbol","title":"ReduxPipelineWrapper","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReduxPipelineWrapper"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxPipelineWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReduxPipelineWrapper"}],"url":"\/documentation\/swiftrex\/reduxpipelinewrapper"}}}