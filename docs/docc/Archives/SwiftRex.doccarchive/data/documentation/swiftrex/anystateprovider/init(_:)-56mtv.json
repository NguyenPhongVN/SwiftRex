{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"realProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StateProvider","preciseIdentifier":"s:8SwiftRex13StateProviderP","text":"StateProvider"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/anystateprovider\/init(_:)-56mtv"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStateProvider\/init(_:)-56mtv","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:8SwiftRex16AnyStateProviderVyACyxGqd__c0D4TypeQyd__RszAA0dE0Rd__lufc","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStateProvider"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/AnyStateProvider/init(_:)-56mtv":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStateProvider\/init(_:)-56mtv","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/anystateprovider\/init(_:)-56mtv"},"doc://SwiftRex/documentation/SwiftRex/StateProvider":{"role":"symbol","title":"StateProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateProvider"}],"abstract":[{"type":"codeVoice","code":"StateProvider"},{"type":"text","text":" defines a protocol for entities able to offer state publishers (Combine Publisher, RxSwift Observable,"},{"type":"text","text":" "},{"type":"text","text":"ReactiveSwift SignalProducer) of certain "},{"type":"codeVoice","code":"StateType"},{"type":"text","text":", so everybody can observe the global state changes through this"},{"type":"text","text":" "},{"type":"text","text":"container. Usually a "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" will implement that, but it can also be a "},{"type":"codeVoice","code":"StoreProjection"},{"type":"text","text":" with a state that is derived from"},{"type":"text","text":" "},{"type":"text","text":"the global source-of-truth."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StateProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StateProvider"}],"url":"\/documentation\/swiftrex\/stateprovider"},"doc://SwiftRex/documentation/SwiftRex/AnyStateProvider":{"role":"symbol","title":"AnyStateProvider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyStateProvider"}],"abstract":[{"type":"codeVoice","code":"AnyStateProvider"},{"type":"text","text":" erases the protocol "},{"type":"codeVoice","code":"StateProvider"},{"type":"text","text":", which defines a entities able to offer state publishers (Combine Publisher, RxSwift"},{"type":"text","text":" "},{"type":"text","text":"Observable, ReactiveSwift SignalProducer) of certain "},{"type":"codeVoice","code":"StateType"},{"type":"text","text":", so everybody can observe the global state changes through this container. Usually"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" will implement that, but it can also be a "},{"type":"codeVoice","code":"StoreProjection"},{"type":"text","text":" with a state that is derived from the global source-of-truth."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/AnyStateProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyStateProvider"}],"url":"\/documentation\/swiftrex\/anystateprovider"}}}