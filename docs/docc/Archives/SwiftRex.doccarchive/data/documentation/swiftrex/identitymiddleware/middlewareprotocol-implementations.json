{"variants":[{"paths":["\/documentation\/swiftrex\/identitymiddleware\/middlewareprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/MiddlewareProtocol-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"SwiftRex"}],"role":"collectionGroup","title":"MiddlewareProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/eraseToAnyMiddleware()","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:)-72r0c","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:)-15yeo","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:state:)-4j323","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:state:)-3jj2r","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:)-23cua","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:state:)-9jk0i","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(state:)-6nfon","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/liftToCollection(action:stateCollection:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/liftToCollection(inputAction:outputAction:state:)"],"generated":true}],"references":{"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware":{"role":"symbol","title":"IdentityMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentityMiddleware"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"IdentityMiddleware"},{"type":"text","text":" won’t do any operation, simply bypass actions through. It’s meant to provide identity axiom"},{"type":"text","text":" "},{"type":"text","text":"to middleware type to allow its conformance to monoid algebra. It will simply forward actions to the next middleware"},{"type":"text","text":" "},{"type":"text","text":"in the chain or to the reducers. It can be useful for Unit Tests or for some compositions."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentityMiddleware"}],"url":"\/documentation\/swiftrex\/identitymiddleware"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/eraseToAnyMiddleware()":{"role":"symbol","title":"eraseToAnyMiddleware()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyMiddleware"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyMiddleware","preciseIdentifier":"s:8SwiftRex13AnyMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/eraseToAnyMiddleware()","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/erasetoanymiddleware()"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(outputAction:state:)-9jk0i":{"role":"symbol","title":"lift(outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:state:)-9jk0i","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(outputaction:state:)-9jk0i"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/liftToCollection(inputAction:outputAction:state:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"liftToCollection(inputAction:outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"liftToCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CollectionState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftToCollectionMiddleware","preciseIdentifier":"s:8SwiftRex26LiftToCollectionMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/liftToCollection(inputAction:outputAction:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lifttocollection(inputaction:outputaction:state:)"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:state:)-3jj2r":{"role":"symbol","title":"lift(inputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:state:)-3jj2r","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:state:)-3jj2r"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:outputAction:)-15yeo":{"role":"symbol","title":"lift(inputAction:outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:)-15yeo","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:outputaction:)-15yeo"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(state:)-6nfon":{"role":"symbol","title":"lift(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(state:)-6nfon","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(state:)-6nfon"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:outputAction:state:)-4j323":{"role":"symbol","title":"lift(inputAction:outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:state:)-4j323","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:outputaction:state:)-4j323"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(outputAction:)-23cua":{"role":"symbol","title":"lift(outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:)-23cua","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(outputaction:)-23cua"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:)-72r0c":{"role":"symbol","title":"lift(inputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"LiftMiddleware","preciseIdentifier":"s:8SwiftRex14LiftMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A method used to transform a middleware focused in a specific substate into a middleware that can be plugged in a global scope and composed with"},{"type":"text","text":" "},{"type":"text","text":"other middlewares that work on different generic parameters. The global state of your app is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Whole"}]},{"type":"text","text":", and the "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" handles "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Part"}]},{"type":"text","text":", that"},{"type":"text","text":" "},{"type":"text","text":"is a sub-state."},{"type":"text","text":" "},{"type":"text","text":"So for example you may want to have a "},{"type":"codeVoice","code":"GPSMiddleware"},{"type":"text","text":" that knows about the following "},{"type":"codeVoice","code":"struct"},{"type":"text","text":":"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:)-72r0c","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:)-72r0c"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/liftToCollection(action:stateCollection:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"InputActionType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.OutputActionType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"liftToCollection(action:stateCollection:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"liftToCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CollectionState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":">?>, "},{"kind":"externalParam","text":"stateCollection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"LiftToCollectionMiddleware","preciseIdentifier":"s:8SwiftRex26LiftToCollectionMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/liftToCollection(action:stateCollection:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lifttocollection(action:statecollection:)"}}}