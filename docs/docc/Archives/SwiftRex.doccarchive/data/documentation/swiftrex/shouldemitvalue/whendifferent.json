{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenDifferent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ShouldEmitValue","preciseIdentifier":"s:8SwiftRex15ShouldEmitValueO","text":"ShouldEmitValue"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/shouldemitvalue\/whendifferent"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ShouldEmitValue\/whenDifferent","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"For "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" structures, "},{"type":"codeVoice","code":".whenDifferent"},{"type":"text","text":" will run "},{"type":"codeVoice","code":"=="},{"type":"text","text":" operator between old and new state, and notify when they are different, or ignore"},{"type":"text","text":" "},{"type":"text","text":"when they are equal."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"whenDifferent","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenDifferent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ShouldEmitValue","preciseIdentifier":"s:8SwiftRex15ShouldEmitValueO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"symbolKind":"property","externalID":"s:8SwiftRex15ShouldEmitValueOAASQRzlE13whenDifferentACyxGvpZ","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ShouldEmitValue"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/ShouldEmitValue":{"role":"symbol","title":"ShouldEmitValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShouldEmitValue"}],"abstract":[{"type":"text","text":"A predicate that determines if a state change should notify subscribers or not, by comparing previous and new states and returning a Bool true in"},{"type":"text","text":" "},{"type":"text","text":"case it should emit it, or false in case it should not emit it."},{"type":"text","text":" "},{"type":"text","text":"It comes with some standard options like "},{"type":"codeVoice","code":".always"},{"type":"text","text":", "},{"type":"codeVoice","code":".never"},{"type":"text","text":", "},{"type":"codeVoice","code":".when(old, new) -> Bool"},{"type":"text","text":" and, for "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" structures, "},{"type":"codeVoice","code":".whenDifferent"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ShouldEmitValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShouldEmitValue"}],"url":"\/documentation\/swiftrex\/shouldemitvalue"},"doc://SwiftRex/documentation/SwiftRex/ShouldEmitValue/whenDifferent":{"conformance":{"constraints":[{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"whenDifferent","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenDifferent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ShouldEmitValue","preciseIdentifier":"s:8SwiftRex15ShouldEmitValueO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"For "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" structures, "},{"type":"codeVoice","code":".whenDifferent"},{"type":"text","text":" will run "},{"type":"codeVoice","code":"=="},{"type":"text","text":" operator between old and new state, and notify when they are different, or ignore"},{"type":"text","text":" "},{"type":"text","text":"when they are equal."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ShouldEmitValue\/whenDifferent","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/shouldemitvalue\/whendifferent"}}}