{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"statePublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/UnfailablePublisherType","preciseIdentifier":"s:8SwiftRex23UnfailablePublisherTypea","text":"UnfailablePublisherType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/reduxstorebase\/statepublisher"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase\/statePublisher","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"State publisher which can be subscribed in order to be notified on every mutation"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"statePublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnfailablePublisherType","preciseIdentifier":"s:8SwiftRex23UnfailablePublisherTypea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"title":"statePublisher","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:8SwiftRex14ReduxStoreBaseC14statePublisherAA0G4TypeVyq_s5NeverOGvp","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/ReduxStoreBase/statePublisher":{"role":"symbol","title":"statePublisher","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"statePublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnfailablePublisherType","preciseIdentifier":"s:8SwiftRex23UnfailablePublisherTypea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"State publisher which can be subscribed in order to be notified on every mutation"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase\/statePublisher","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/reduxstorebase\/statepublisher"},"doc://SwiftRex/documentation/SwiftRex/UnfailablePublisherType":{"role":"symbol","title":"UnfailablePublisherType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnfailablePublisherType"}],"abstract":[{"type":"text","text":"Abstraction over publisher\/observable\/signal producer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"For this specific case, the failure\/error is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", meaning that this publisher can‚Äôt emit error."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/UnfailablePublisherType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnfailablePublisherType"}],"url":"\/documentation\/swiftrex\/unfailablepublishertype"},"doc://SwiftRex/documentation/SwiftRex/ReduxStoreBase":{"role":"symbol","title":"ReduxStoreBase","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReduxStoreBase"}],"abstract":[{"type":"text","text":"üè™ "},{"type":"codeVoice","code":"ReduxStoreBase"},{"type":"text","text":" is a base class that can be used to create the main store of an app, using the redux pattern."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReduxStoreBase"}],"url":"\/documentation\/swiftrex\/reduxstorebase"}}}