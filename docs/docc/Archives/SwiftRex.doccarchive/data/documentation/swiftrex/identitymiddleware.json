{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentityMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/identitymiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol","doc:\/\/SwiftRex\/SQ"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"IdentityMiddleware"},{"type":"text","text":" won’t do any operation, simply bypass actions through. It’s meant to provide identity axiom"},{"type":"text","text":" "},{"type":"text","text":"to middleware type to allow its conformance to monoid algebra. It will simply forward actions to the next middleware"},{"type":"text","text":" "},{"type":"text","text":"in the chain or to the reducers. It can be useful for Unit Tests or for some compositions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentityMiddleware"}],"title":"IdentityMiddleware","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:8SwiftRex18IdentityMiddlewareV","modules":[{"name":"SwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"IdentityMiddleware"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/handle(action:from:afterReducer:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/handle(action:from:state:)","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:)-8p05t","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:)-v1po","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:state:)-10e7z","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:state:)-98tsj","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:)-5fc0v","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:state:)-5nu07","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(state:)-1jjyy","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/receiveContext(getState:output:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/MiddlewareProtocol-Implementations","doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/Equatable-Implementations"],"generated":true}],"references":{"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(state:)-1jjyy":{"role":"symbol","title":"lift(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(state:)-1jjyy","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(state:)-1jjyy"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:state:)-98tsj":{"role":"symbol","title":"lift(inputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:state:)-98tsj","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:state:)-98tsj"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(outputAction:state:)-5nu07":{"role":"symbol","title":"lift(outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:state:)-5nu07","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(outputaction:state:)-5nu07"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/InputActionType":{"role":"symbol","title":"InputActionType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputActionType"}],"abstract":[{"type":"text","text":"The Action type that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" knows how to handle, so the store will forward actions of this type to this middleware."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/inputactiontype"},"doc://SwiftRex/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftRex\/SQ"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware":{"role":"symbol","title":"IdentityMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentityMiddleware"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"IdentityMiddleware"},{"type":"text","text":" won’t do any operation, simply bypass actions through. It’s meant to provide identity axiom"},{"type":"text","text":" "},{"type":"text","text":"to middleware type to allow its conformance to monoid algebra. It will simply forward actions to the next middleware"},{"type":"text","text":" "},{"type":"text","text":"in the chain or to the reducers. It can be useful for Unit Tests or for some compositions."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentityMiddleware"}],"url":"\/documentation\/swiftrex\/identitymiddleware"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/receiveContext(getState:output:)":{"role":"symbol","title":"receiveContext(getState:output:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveContext"},{"kind":"text","text":"("},{"kind":"externalParam","text":"getState"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyActionHandler","preciseIdentifier":"s:8SwiftRex16AnyActionHandlerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Middleware setup. This function is deprecated and should never be used."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/receiveContext(getState:output:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/receivecontext(getstate:output:)"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/handle(action:from:state:)":{"role":"symbol","title":"handle(action:from:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IO","preciseIdentifier":"s:8SwiftRex2IOV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Handles the incoming actions and may or not start async tasks, check the latest state at any point or dispatch"},{"type":"text","text":" "},{"type":"text","text":"additional actions. This is also a good place for analytics, tracking, logging and telemetry."},{"type":"text","text":" "},{"type":"text","text":"In this empty implementation, will do nothing but call next delegate."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/handle(action:from:state:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/handle(action:from:state:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/OutputActionType":{"role":"symbol","title":"OutputActionType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputActionType"}],"abstract":[{"type":"text","text":"The Action type that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" will eventually trigger back to the store in response of side-effects. This can be the same"},{"type":"text","text":" "},{"type":"text","text":"as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType"},{"type":"text","text":" or different, in case you want to separate your enum in requests and responses."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/OutputActionType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/outputactiontype"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/handle(action:from:afterReducer:)":{"role":"symbol","title":"handle(action:from:afterReducer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"afterReducer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"AfterReducer","preciseIdentifier":"s:8SwiftRex12AfterReducerV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/handle(action:from:afterReducer:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/swiftrex\/identitymiddleware\/handle(action:from:afterreducer:)"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" is a plugin, or a composition of several plugins, that are assigned to the app global "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType"},{"type":"text","text":" pipeline in order to"},{"type":"text","text":" "},{"type":"text","text":"handle each action received ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/InputActionType"},{"type":"text","text":"), to execute side-effects in response, and eventually dispatch more actions"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/OutputActionType"},{"type":"text","text":") in the process. It can also access the most up-to-date "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType"},{"type":"text","text":" while handling an incoming action."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/swiftrex\/middlewareprotocol"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareProtocol/StateType":{"role":"symbol","title":"StateType","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateType"}],"abstract":[{"type":"text","text":"The State part that this "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol"},{"type":"text","text":" needs to read in order to make decisions. This middleware will be able to read the most"},{"type":"text","text":" "},{"type":"text","text":"up-to-date "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType"},{"type":"text","text":" from the store while handling an incoming action, but it can never write or make changes to it."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareProtocol\/StateType","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/swiftrex\/middlewareprotocol\/statetype"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:outputAction:)-v1po":{"role":"symbol","title":"lift(inputAction:outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:)-v1po","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:outputaction:)-v1po"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Default initializer for "},{"type":"codeVoice","code":"IdentityMiddleware"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/init()","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/init()"},"doc://SwiftRex/documentation/SwiftRex/StoreType":{"role":"symbol","title":"StoreType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StoreType"}],"abstract":[{"type":"text","text":"A protocol that defines the two expected roles of a “Store”: receive\/distribute actions ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ActionHandler"},{"type":"text","text":"); and publish changes of the the"},{"type":"text","text":" "},{"type":"text","text":"current app state ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StateProvider"},{"type":"text","text":") to possible subscribers. It can be a real store (such as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReduxStoreBase"},{"type":"text","text":") or just a “proxy” that acts on"},{"type":"text","text":" "},{"type":"text","text":"behalf of a real store, for example, in the case of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreProjection"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/StoreType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StoreType"}],"url":"\/documentation\/swiftrex\/storetype"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:)-8p05t":{"role":"symbol","title":"lift(inputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:)-8p05t","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:)-8p05t"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(inputAction:outputAction:state:)-10e7z":{"role":"symbol","title":"lift(inputAction:outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(inputAction:outputAction:state:)-10e7z","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(inputaction:outputaction:state:)-10e7z"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/lift(outputAction:)-5fc0v":{"role":"symbol","title":"lift(outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IdentityMiddleware","preciseIdentifier":"s:8SwiftRex18IdentityMiddlewareV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/lift(outputAction:)-5fc0v","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/lift(outputaction:)-5fc0v"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/MiddlewareProtocol-Implementations":{"role":"collectionGroup","title":"MiddlewareProtocol Implementations","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/MiddlewareProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/middlewareprotocol-implementations"},"doc://SwiftRex/documentation/SwiftRex/IdentityMiddleware/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/IdentityMiddleware\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftrex\/identitymiddleware\/equatable-implementations"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"}}}