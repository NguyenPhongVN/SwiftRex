{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/middlewarereaderprotocol\/identity-chfd"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/identity-chfd","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An identity MiddlewareReader ignores whatever Dependencies are given and simply return an identity Middleware. Composing any given middleware"},{"type":"text","text":" "},{"type":"text","text":"reader “A” with the identity middleware reader will be exactly the same as composing in the other order and also exactly the same as only the"},{"type":"text","text":" "},{"type":"text","text":"middleware reader “A” alone, which means, it doesn’t change anything in the MiddlewareReader “A” or its resulting Middleware, regardless of"},{"type":"text","text":" "},{"type":"text","text":"the order it was composed to."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"MiddlewareType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Monoid"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"identity","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","externalID":"s:8SwiftRex24MiddlewareReaderProtocolPA2A6Monoid0C4TypeRpzrlE8identityxvpZ","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol"]]},"references":{"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol/identity-chfd":{"conformance":{"constraints":[{"type":"codeVoice","code":"MiddlewareType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Monoid"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"identity","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"identity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"An identity MiddlewareReader ignores whatever Dependencies are given and simply return an identity Middleware. Composing any given middleware"},{"type":"text","text":" "},{"type":"text","text":"reader “A” with the identity middleware reader will be exactly the same as composing in the other order and also exactly the same as only the"},{"type":"text","text":" "},{"type":"text","text":"middleware reader “A” alone, which means, it doesn’t change anything in the MiddlewareReader “A” or its resulting Middleware, regardless of"},{"type":"text","text":" "},{"type":"text","text":"the order it was composed to."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/identity-chfd","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereaderprotocol\/identity-chfd"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol":{"role":"symbol","title":"MiddlewareReaderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"abstract":[{"type":"text","text":"A protocol to generalize MiddlewareReader. Unless you look for some very special behaviour, you should use MiddlewareReader directly which"},{"type":"text","text":" "},{"type":"text","text":"provides everything needed for your Middleware dependency injection."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"url":"\/documentation\/swiftrex\/middlewarereaderprotocol"}}}