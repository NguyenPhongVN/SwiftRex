{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddlewareReader"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol","preciseIdentifier":"s:8SwiftRex24MiddlewareReaderProtocolP","text":"MiddlewareReaderProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Dependencies"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a flatten "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" with transformation applied and dependencies injected in the original middleware reader, the produced"},{"type":"text","text":" "},{"type":"text","text":"middleware given to the transform function and injected again."}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a function that, from the produced middleware of the original middleware reader, can create another middleware reader"},{"type":"text","text":" "},{"type":"text","text":"that produces a different middleware, as long as their dependencies are the same"}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/middlewarereaderprotocol\/flatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/flatMap(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Having a MiddlewareReader mapping that results in another MiddlewareReader that also depends on same environment, we can flatten up"},{"type":"text","text":" "},{"type":"text","text":"the map by using the same environment to inject in both MiddlewareReaders. Useful when there’s a chain of dependencies"}],"kind":"symbol","metadata":{"role":"symbol","title":"flatMap(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddlewareReader"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"}],"symbolKind":"method","externalID":"s:8SwiftRex24MiddlewareReaderProtocolPAAE7flatMapyqd__qd__0C4TypeQzcAaBRd__12DependenciesQyd__AGRtzlF","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol"]]},"references":{"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol":{"role":"symbol","title":"MiddlewareReaderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"abstract":[{"type":"text","text":"A protocol to generalize MiddlewareReader. Unless you look for some very special behaviour, you should use MiddlewareReader directly which"},{"type":"text","text":" "},{"type":"text","text":"provides everything needed for your Middleware dependency injection."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"url":"\/documentation\/swiftrex\/middlewarereaderprotocol"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol/flatMap(_:)":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewMiddlewareReader"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewMiddlewareReader"}],"abstract":[{"type":"text","text":"Having a MiddlewareReader mapping that results in another MiddlewareReader that also depends on same environment, we can flatten up"},{"type":"text","text":" "},{"type":"text","text":"the map by using the same environment to inject in both MiddlewareReaders. Useful when there’s a chain of dependencies"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/flatMap(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereaderprotocol\/flatmap(_:)"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"}}}