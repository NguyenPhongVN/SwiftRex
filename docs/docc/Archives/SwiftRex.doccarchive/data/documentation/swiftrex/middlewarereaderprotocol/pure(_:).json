{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pure"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" that wraps the given Middleware until "},{"type":"codeVoice","code":"inject"},{"type":"text","text":" is called."}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The middleware that will be eventually returned when “inject” is called. This is a autoclosure so it can be lazily"},{"type":"text","text":" "},{"type":"text","text":"evaluated."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/middlewarereaderprotocol\/pure(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/pure(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Wraps a pure function in a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" container just for the sake of composition. Nothing is actually needed for the calculation and"},{"type":"text","text":" "},{"type":"text","text":"injected dependency will be ignored. This is useful for lifting a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":", so you can compose with other"},{"type":"text","text":" "},{"type":"text","text":"MiddlewareReaders that actually depend on dependencies."}],"kind":"symbol","metadata":{"role":"symbol","title":"pure(_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pure"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:8SwiftRex24MiddlewareReaderProtocolPAAE4pureyx0C4TypeQzFZ","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol"]]},"references":{"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol/pure(_:)":{"role":"symbol","title":"pure(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pure"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MiddlewareType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Wraps a pure function in a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":" container just for the sake of composition. Nothing is actually needed for the calculation and"},{"type":"text","text":" "},{"type":"text","text":"injected dependency will be ignored. This is useful for lifting a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" into a "},{"type":"codeVoice","code":"MiddlewareReader"},{"type":"text","text":", so you can compose with other"},{"type":"text","text":" "},{"type":"text","text":"MiddlewareReaders that actually depend on dependencies."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol\/pure(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/middlewarereaderprotocol\/pure(_:)"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/MiddlewareReaderProtocol":{"role":"symbol","title":"MiddlewareReaderProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"abstract":[{"type":"text","text":"A protocol to generalize MiddlewareReader. Unless you look for some very special behaviour, you should use MiddlewareReader directly which"},{"type":"text","text":" "},{"type":"text","text":"provides everything needed for your Middleware dependency injection."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/MiddlewareReaderProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareReaderProtocol"}],"url":"\/documentation\/swiftrex\/middlewarereaderprotocol"}}}