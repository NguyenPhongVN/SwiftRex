{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriberType"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ErrorType"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/subscribertype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Abstraction over subscriber\/observer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriberType"}],"title":"SubscriberType","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:8SwiftRex14SubscriberTypeV","modules":[{"name":"SwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"SubscriberType"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/init(onValue:onCompleted:onSubscribe:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onCompleted","doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onSubscribe","doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/assertNoFailure()"]}],"references":{"doc://SwiftRex/documentation/SwiftRex/SubscriberType/onCompleted":{"role":"symbol","title":"onCompleted","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onCompleted"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"type":"text","text":"Closure to handle completion, which has an optional error in case the completion happened due to an error being emitted"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onCompleted","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/oncompleted"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType/init(onValue:onCompleted:onSubscribe:)":{"role":"symbol","title":"init(onValue:onCompleted:onSubscribe:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onValue"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onCompleted"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"onSubscribe"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Protocol-witness of a subscriber. Configure the behaviour of this wrapper from a concrete implementation from your favourite reactive"},{"type":"text","text":" "},{"type":"text","text":"framework."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/init(onValue:onCompleted:onSubscribe:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/init(onvalue:oncompleted:onsubscribe:)"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType/onValue":{"role":"symbol","title":"onValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onValue"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"type":"text","text":"Closure to handle new values received"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onValue","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/onvalue"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType/assertNoFailure()":{"role":"symbol","title":"assertNoFailure()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SubscriberType","preciseIdentifier":"s:8SwiftRex14SubscriberTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms any subscriber into a Unfailable subscriber with the same element type. After calling this method, a subscriber will be derived"},{"type":"text","text":" "},{"type":"text","text":"and it wonâ€™t accept publishers that can fail."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/assertNoFailure()","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/assertnofailure()"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType/onSubscribe":{"role":"symbol","title":"onSubscribe","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSubscribe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"type":"text","text":"Closure to handle subscription event"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType\/onSubscribe","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/subscribertype\/onsubscribe"},"doc://SwiftRex/documentation/SwiftRex/SubscriberType":{"role":"symbol","title":"SubscriberType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubscriberType"}],"abstract":[{"type":"text","text":"Abstraction over subscriber\/observer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/SubscriberType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubscriberType"}],"url":"\/documentation\/swiftrex\/subscribertype"},"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"}}}