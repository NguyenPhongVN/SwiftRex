{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/replaylastsubjecttype\/value"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType\/value","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Reads the most recent element emitted by this subject. This subject can be seen as a variable in stateful programming style, it holds one"},{"type":"text","text":" "},{"type":"text","text":"value that can be read at any point using a getter function "},{"type":"codeVoice","code":"() -> Element"},{"type":"text","text":". Useful for bridging with the imperative world."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"}],"title":"value","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:8SwiftRex21ReplayLastSubjectTypeV5valuexycvp","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/ReplayLastSubjectType":{"role":"symbol","title":"ReplayLastSubjectType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplayLastSubjectType"}],"abstract":[{"type":"text","text":"Abstraction over subject types able to keep the last object ("},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"BehaviorSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"MutableProperty"},{"type":"text","text":", "},{"type":"codeVoice","code":"Variable"},{"type":"text","text":") from"},{"type":"text","text":" "},{"type":"text","text":"reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplayLastSubjectType"}],"url":"\/documentation\/swiftrex\/replaylastsubjecttype"},"doc://SwiftRex/documentation/SwiftRex/ReplayLastSubjectType/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"}],"abstract":[{"type":"text","text":"Reads the most recent element emitted by this subject. This subject can be seen as a variable in stateful programming style, it holds one"},{"type":"text","text":" "},{"type":"text","text":"value that can be read at any point using a getter function "},{"type":"codeVoice","code":"() -> Element"},{"type":"text","text":". Useful for bridging with the imperative world."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType\/value","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/replaylastsubjecttype\/value"}}}