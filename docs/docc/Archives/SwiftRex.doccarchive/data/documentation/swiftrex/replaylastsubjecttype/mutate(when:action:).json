{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mutate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"when"},{"kind":"text","text":" "},{"kind":"internalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"returns whatever is returned by the action closure, allowing to chain operations"}]}]},{"kind":"parameters","parameters":[{"name":"condition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a predicate that, after simulating the mutation, allows you to decide if it should happen or not"}]}]},{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"read and write the current value atomically, and optionally return something"}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/replaylastsubjecttype\/mutate(when:action:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType\/mutate(when:action:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Atomically mutate this subject’s value in a closure where you can read and write the current element value"},{"type":"text","text":" "},{"type":"text","text":"Before the mutation, a condition will be evaluated and the mutation will only happen when the result of this evaluation returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This allows you to simulate the mutation before executing it."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"ErrorType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"mutate(when:action:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mutate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"symbolKind":"method","externalID":"s:8SwiftRex21ReplayLastSubjectTypeV6mutate4when6actionqd__Sbqd__c_qd__xzXEtlF","extendedModule":"SwiftRex","modules":[{"name":"SwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex","doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType"]]},"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/ReplayLastSubjectType/mutate(when:action:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ErrorType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"mutate(when:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mutate"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"when"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Atomically mutate this subject’s value in a closure where you can read and write the current element value"},{"type":"text","text":" "},{"type":"text","text":"Before the mutation, a condition will be evaluated and the mutation will only happen when the result of this evaluation returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This allows you to simulate the mutation before executing it."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType\/mutate(when:action:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/replaylastsubjecttype\/mutate(when:action:)"},"doc://SwiftRex/documentation/SwiftRex/ReplayLastSubjectType":{"role":"symbol","title":"ReplayLastSubjectType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplayLastSubjectType"}],"abstract":[{"type":"text","text":"Abstraction over subject types able to keep the last object ("},{"type":"codeVoice","code":"CurrentValueSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"BehaviorSubject"},{"type":"text","text":", "},{"type":"codeVoice","code":"MutableProperty"},{"type":"text","text":", "},{"type":"codeVoice","code":"Variable"},{"type":"text","text":") from"},{"type":"text","text":" "},{"type":"text","text":"reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/ReplayLastSubjectType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplayLastSubjectType"}],"url":"\/documentation\/swiftrex\/replaylastsubjecttype"}}}