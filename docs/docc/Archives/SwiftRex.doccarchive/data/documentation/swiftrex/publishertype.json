{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherType"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ErrorType"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftrex\/publishertype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Abstraction over publisher\/observable\/signal producer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherType"}],"title":"PublisherType","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:8SwiftRex13PublisherTypeV","modules":[{"name":"SwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"PublisherType"}]},"hierarchy":{"paths":[["doc:\/\/SwiftRex\/documentation\/SwiftRex"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/init(subscribe:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/subscribe"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/assertNoFailure()","doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/map(_:)"]}],"references":{"doc://SwiftRex/documentation/SwiftRex":{"role":"collection","title":"SwiftRex","abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex"},"doc://SwiftRex/documentation/SwiftRex/PublisherType/assertNoFailure()":{"role":"symbol","title":"assertNoFailure()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNoFailure"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"PublisherType","preciseIdentifier":"s:8SwiftRex13PublisherTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Transforms any publishers into a Unfailable publisher with the same element type. After calling this method, a publisher will be derived"},{"type":"text","text":" "},{"type":"text","text":"and it wonâ€™t emit failures or error. In case the upstream emits an error, a "},{"type":"codeVoice","code":"fatalError"},{"type":"text","text":" will be executed, so be careful when using this"},{"type":"text","text":" "},{"type":"text","text":"operator."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/assertNoFailure()","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/publishertype\/assertnofailure()"},"doc://SwiftRex/documentation/SwiftRex/PublisherType":{"role":"symbol","title":"PublisherType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherType"}],"abstract":[{"type":"text","text":"Abstraction over publisher\/observable\/signal producer types from reactive frameworks."},{"type":"text","text":" "},{"type":"text","text":"This abstraction uses concept similar to type-erasure or protocol witness pattern, wrapping the behaviour of concrete implementations and"},{"type":"text","text":" "},{"type":"text","text":"delegating to them once the wrapper funcions are called."}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherType"}],"url":"\/documentation\/swiftrex\/publishertype"},"doc://SwiftRex/documentation/SwiftRex/PublisherType/init(subscribe:)":{"role":"symbol","title":"init(subscribe:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"subscribe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SubscriberType","preciseIdentifier":"s:8SwiftRex14SubscriberTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/init(subscribe:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/publishertype\/init(subscribe:)"},"doc://SwiftRex/documentation/SwiftRex/PublisherType/map(_:)":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewElement"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewElement"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PublisherType","preciseIdentifier":"s:8SwiftRex13PublisherTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewElement"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Maps elements emitted by the upstream into a new element type, given by the transform function provided by you"}],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/map(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/publishertype\/map(_:)"},"doc://SwiftRex/documentation/SwiftRex/PublisherType/subscribe":{"role":"symbol","title":"subscribe","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SubscriberType","preciseIdentifier":"s:8SwiftRex14SubscriberTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ErrorType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"SubscriptionType","preciseIdentifier":"s:8SwiftRex16SubscriptionTypeP"}],"abstract":[],"identifier":"doc:\/\/SwiftRex\/documentation\/SwiftRex\/PublisherType\/subscribe","kind":"symbol","type":"topic","url":"\/documentation\/swiftrex\/publishertype\/subscribe"}}}