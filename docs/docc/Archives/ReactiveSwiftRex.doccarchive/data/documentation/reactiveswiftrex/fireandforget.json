{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FireAndForget"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"IgnoringOutput"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reactiveswiftrex\/fireandforget"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/ReactiveSwiftRex\/13ReactiveSwift22SignalProducerProtocolP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Fire And Forget is a SignalProducer for when you don’t care about the output of certain async operation. It’s important to notice that this"},{"type":"text","text":" "},{"type":"text","text":"operation can’t fail. If you want to also ignore the failure, then you can catchErrors and return nil in the proper init."},{"type":"text","text":" "},{"type":"text","text":"It may complete successfully when task is done."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FireAndForget"}],"title":"FireAndForget","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:16ReactiveSwiftRex13FireAndForgetV","modules":[{"name":"ReactiveSwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"FireAndForget"}]},"hierarchy":{"paths":[["doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:)-359yl","doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:)-3ntip","doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:catchErrors:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/producer"]},{"title":"Type Aliases","identifiers":["doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/Error","doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/Value"]},{"title":"Default Implementations","identifiers":["doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/SignalProducerProtocol-Implementations"],"generated":true}],"references":{"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex":{"role":"collection","title":"ReactiveSwiftRex","abstract":[],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswiftrex"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/Error":{"role":"symbol","title":"FireAndForget.Error","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"abstract":[{"type":"text","text":"The type of error that can occur on "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/Error","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"url":"\/documentation\/reactiveswiftrex\/fireandforget\/error"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/Value":{"role":"symbol","title":"FireAndForget.Value","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"The type of values being sent by "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/Value","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Value"}],"url":"\/documentation\/reactiveswiftrex\/fireandforget\/value"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/init(_:catchErrors:)":{"role":"symbol","title":"init(_:catchErrors:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"catchErrors"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IgnoringOutput"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Init a FireAndForget signal producer by providing an upstream that could fail, as well as a catchErrors function to ensure that FireAndForget"},{"type":"text","text":" "},{"type":"text","text":"can’t itself fail. You can safely return nil from catchErrors. Otherwise outputs sent from catch errors will NOT be ignored, only those from"},{"type":"text","text":" "},{"type":"text","text":"the happy path."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:catchErrors:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswiftrex\/fireandforget\/init(_:catcherrors:)"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget":{"role":"symbol","title":"FireAndForget","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FireAndForget"}],"abstract":[{"type":"text","text":"Fire And Forget is a SignalProducer for when you don’t care about the output of certain async operation. It’s important to notice that this"},{"type":"text","text":" "},{"type":"text","text":"operation can’t fail. If you want to also ignore the failure, then you can catchErrors and return nil in the proper init."},{"type":"text","text":" "},{"type":"text","text":"It may complete successfully when task is done."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FireAndForget"}],"url":"\/documentation\/reactiveswiftrex\/fireandforget"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/SignalProducerProtocol-Implementations":{"role":"collectionGroup","title":"SignalProducerProtocol Implementations","abstract":[],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/SignalProducerProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/reactiveswiftrex\/fireandforget\/signalproducerprotocol-implementations"},"doc://ReactiveSwiftRex/13ReactiveSwift22SignalProducerProtocolP":{"type":"unresolvable","title":"ReactiveSwift.SignalProducerProtocol","identifier":"doc:\/\/ReactiveSwiftRex\/13ReactiveSwift22SignalProducerProtocolP"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/init(_:)-3ntip":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Init a FireAndForget signal producer by providing a closure with the operation to execute and ignore the output."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:)-3ntip","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswiftrex\/fireandforget\/init(_:)-3ntip"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/init(_:)-359yl":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Init a FireAndForget signal producer by providing an upstream that never fails so we can simply ignore its output"}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/init(_:)-359yl","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswiftrex\/fireandforget\/init(_:)-359yl"},"doc://ReactiveSwiftRex/documentation/ReactiveSwiftRex/FireAndForget/producer":{"role":"symbol","title":"producer","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"producer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SignalProducer","preciseIdentifier":"s:13ReactiveSwift14SignalProducerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IgnoringOutput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The materialized "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwiftRex\/documentation\/ReactiveSwiftRex\/FireAndForget\/producer","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswiftrex\/fireandforget\/producer"}}}