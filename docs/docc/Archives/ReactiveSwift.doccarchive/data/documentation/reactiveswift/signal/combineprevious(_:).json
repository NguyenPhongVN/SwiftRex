{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinePrevious"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initial"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC","text":"Signal"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"), "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A signal that sends tuples that contain previous and current"},{"type":"text","text":" "},{"type":"text","text":"sent values of "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"initial","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value that will be combined with the first value sent by"},{"type":"text","text":" "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reactiveswift\/signal\/combineprevious(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/combinePrevious(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Forward events from "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with history: values of the returned signal"},{"type":"text","text":" "},{"type":"text","text":"are a tuples whose first member is the previous value and whose second member"},{"type":"text","text":" "},{"type":"text","text":"is the current value. "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" is supplied as the first member when "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"text","text":"sends its first value."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"combinePrevious(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinePrevious"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"), "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:13ReactiveSwift6SignalC15combinePreviousyACyx_xtq_GxF","extendedModule":"ReactiveSwift","modules":[{"name":"ReactiveSwift"}]},"hierarchy":{"paths":[["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal"]]},"references":{"doc://ReactiveSwift/documentation/ReactiveSwift/Signal/combinePrevious(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"combinePrevious(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinePrevious"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"), "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Forward events from "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with history: values of the returned signal"},{"type":"text","text":" "},{"type":"text","text":"are a tuples whose first member is the previous value and whose second member"},{"type":"text","text":" "},{"type":"text","text":"is the current value. "},{"type":"codeVoice","code":"initial"},{"type":"text","text":" is supplied as the first member when "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"text","text":"sends its first value."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/combinePrevious(_:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift\/signal\/combineprevious(_:)"},"doc://ReactiveSwift/documentation/ReactiveSwift":{"role":"collection","title":"ReactiveSwift","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift"},"doc://ReactiveSwift/documentation/ReactiveSwift/Signal":{"role":"symbol","title":"Signal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signal"}],"abstract":[{"type":"text","text":"A push-driven stream that sends Events over time, parameterized by the type"},{"type":"text","text":" "},{"type":"text","text":"of values being sent ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") and the type of failure that can occur"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"Error"},{"type":"text","text":"). If no failures should be possible, Never can be specified for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Signal"}],"url":"\/documentation\/reactiveswift\/signal"}}}