{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reentrantUnserializedPipe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disposable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Disposable","preciseIdentifier":"s:13ReactiveSwift10DisposableP","text":"Disposable"},{"kind":"text","text":"? = nil) -> (output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC","text":"Signal"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">, input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC","text":"Signal"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">."},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/Observer","preciseIdentifier":"s:13ReactiveSwift6SignalC8ObserverC","text":"Observer"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A 2-tuple of the output end of the pipe as "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":", and the input end"},{"type":"text","text":" "},{"type":"text","text":"of the pipe as "},{"type":"codeVoice","code":"Signal.Observer"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"disposable","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional disposable to associate with the signal, and"},{"type":"text","text":" "},{"type":"text","text":"to be disposed of when the signal terminates."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided input observer does not serialize the events it received — akin to "},{"type":"codeVoice","code":"unserialized(_:)"},{"type":"text","text":". Meanwhile,"},{"type":"text","text":" "},{"type":"text","text":"it supports "},{"type":"strong","inlineContent":[{"type":"text","text":"reentrancy"}]},{"type":"text","text":" via a queue drain strategy, which is otherwise unsupported in the default "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" "},{"type":"text","text":"variant."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Recursively sent events are enqueued, and are drained first-in-first-out after the current event has completed"},{"type":"text","text":" "},{"type":"text","text":"calling out to all observers."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the created "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" still guarantees thread safe observer manipulation."}]},{"type":"aside","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The input observer "},{"type":"strong","inlineContent":[{"type":"text","text":"is not thread safe"}]},{"type":"text","text":"."}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" will remain alive until a terminating event is sent"},{"type":"text","text":" "},{"type":"text","text":"to the input observer, or until it has no observers and there"},{"type":"text","text":" "},{"type":"text","text":"are no strong references to it."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reactiveswift\/signal\/reentrantunserializedpipe(disposable:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/reentrantUnserializedPipe(disposable:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" that will be controlled by sending events to an"},{"type":"text","text":" "},{"type":"text","text":"non-serializing, reentrant input observer."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reentrantUnserializedPipe(disposable:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reentrantUnserializedPipe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disposable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:13ReactiveSwift10DisposableP"},{"kind":"text","text":"?) -> (output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">, input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Observer","preciseIdentifier":"s:13ReactiveSwift6SignalC8ObserverC"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:13ReactiveSwift6SignalC25reentrantUnserializedPipe10disposableACyxq_G6output_AC8ObserverCyxq__G5inputtAA10Disposable_pSg_tFZ","extendedModule":"ReactiveSwift","modules":[{"name":"ReactiveSwift"}]},"hierarchy":{"paths":[["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal"]]},"references":{"doc://ReactiveSwift/documentation/ReactiveSwift/Signal/reentrantUnserializedPipe(disposable:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"reentrantUnserializedPipe(disposable:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reentrantUnserializedPipe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"disposable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:13ReactiveSwift10DisposableP"},{"kind":"text","text":"?) -> (output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">, input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signal","preciseIdentifier":"s:13ReactiveSwift6SignalC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Observer","preciseIdentifier":"s:13ReactiveSwift6SignalC8ObserverC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" that will be controlled by sending events to an"},{"type":"text","text":" "},{"type":"text","text":"non-serializing, reentrant input observer."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/reentrantUnserializedPipe(disposable:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift\/signal\/reentrantunserializedpipe(disposable:)"},"doc://ReactiveSwift/documentation/ReactiveSwift":{"role":"collection","title":"ReactiveSwift","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift"},"doc://ReactiveSwift/documentation/ReactiveSwift/Signal":{"role":"symbol","title":"Signal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signal"}],"abstract":[{"type":"text","text":"A push-driven stream that sends Events over time, parameterized by the type"},{"type":"text","text":" "},{"type":"text","text":"of values being sent ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") and the type of failure that can occur"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"Error"},{"type":"text","text":"). If no failures should be possible, Never can be specified for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Signal"}],"url":"\/documentation\/reactiveswift\/signal"},"doc://ReactiveSwift/documentation/ReactiveSwift/Disposable":{"role":"symbol","title":"Disposable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Disposable"}],"abstract":[{"type":"text","text":"Represents something that can be “disposed”, usually associated with freeing"},{"type":"text","text":" "},{"type":"text","text":"resources or canceling work."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Disposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Disposable"}],"url":"\/documentation\/reactiveswift\/disposable"},"doc://ReactiveSwift/documentation/ReactiveSwift/Signal/Observer":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Signal.Observer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observer"}],"abstract":[{"type":"text","text":"An Observer is a simple wrapper around a function which can receive Events"},{"type":"text","text":" "},{"type":"text","text":"(typically from a Signal)."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal\/Observer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Observer"}],"url":"\/documentation\/reactiveswift\/signal\/observer"}}}