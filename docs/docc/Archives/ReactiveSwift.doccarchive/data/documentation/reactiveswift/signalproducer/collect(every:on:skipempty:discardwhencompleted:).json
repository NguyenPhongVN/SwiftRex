{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"every"},{"kind":"text","text":" "},{"kind":"internalParam","text":"interval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"scheduler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/DateScheduler","preciseIdentifier":"s:13ReactiveSwift13DateSchedulerP","text":"DateScheduler"},{"kind":"text","text":", "},{"kind":"externalParam","text":"skipEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = false, "},{"kind":"externalParam","text":"discardWhenCompleted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer","preciseIdentifier":"s:13ReactiveSwift14SignalProducerV","text":"SignalProducer"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A producer that sends all values that are sent from "},{"type":"codeVoice","code":"self"},{"type":"text","text":" "},{"type":"text","text":"at "},{"type":"codeVoice","code":"interval"},{"type":"text","text":" seconds apart."}]}]},{"kind":"parameters","parameters":[{"name":"interval","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A repetition interval."}]}]},{"name":"scheduler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A scheduler to send values on."}]}]},{"name":"skipEmpty","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether empty arrays should be sent if no values were"},{"type":"text","text":" "},{"type":"text","text":"accumulated during the interval."}]}]},{"name":"discardWhenCompleted","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A boolean to indicate if the latest unsent"},{"type":"text","text":" "},{"type":"text","text":"values should be discarded on completion."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"self"},{"type":"text","text":" terminates while values are being accumulated,"},{"type":"text","text":" "},{"type":"text","text":"the behaviour will be determined by "},{"type":"codeVoice","code":"discardWhenCompleted"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", the values will be discarded and the returned producer"},{"type":"text","text":" "},{"type":"text","text":"will terminate immediately."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", that values will be delivered at the next interval."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reactiveswift\/signalproducer\/collect(every:on:skipempty:discardwhencompleted:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer\/collect(every:on:skipEmpty:discardWhenCompleted:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Forward the latest values on "},{"type":"codeVoice","code":"scheduler"},{"type":"text","text":" every "},{"type":"codeVoice","code":"interval"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"collect(every:on:skipEmpty:discardWhenCompleted:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"every"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateScheduler","preciseIdentifier":"s:13ReactiveSwift13DateSchedulerP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"skipEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"discardWhenCompleted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SignalProducer","preciseIdentifier":"s:13ReactiveSwift14SignalProducerV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:13ReactiveSwift14SignalProducerV7collect5every2on9skipEmpty20discardWhenCompletedACySayxGq_G8Dispatch0M12TimeIntervalO_AA13DateScheduler_pS2btF","extendedModule":"ReactiveSwift","modules":[{"name":"ReactiveSwift"}]},"hierarchy":{"paths":[["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer"]]},"references":{"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProducer/collect(every:on:skipEmpty:discardWhenCompleted:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Error"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"collect(every:on:skipEmpty:discardWhenCompleted:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"every"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateScheduler","preciseIdentifier":"s:13ReactiveSwift13DateSchedulerP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"skipEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"discardWhenCompleted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SignalProducer","preciseIdentifier":"s:13ReactiveSwift14SignalProducerV"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Forward the latest values on "},{"type":"codeVoice","code":"scheduler"},{"type":"text","text":" every "},{"type":"codeVoice","code":"interval"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer\/collect(every:on:skipEmpty:discardWhenCompleted:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift\/signalproducer\/collect(every:on:skipempty:discardwhencompleted:)"},"doc://ReactiveSwift/documentation/ReactiveSwift":{"role":"collection","title":"ReactiveSwift","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift"},"doc://ReactiveSwift/documentation/ReactiveSwift/DateScheduler":{"role":"symbol","title":"DateScheduler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateScheduler"}],"abstract":[{"type":"text","text":"A particular kind of scheduler that supports enqueuing actions at future"},{"type":"text","text":" "},{"type":"text","text":"dates."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/DateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateScheduler"}],"url":"\/documentation\/reactiveswift\/datescheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProducer":{"role":"symbol","title":"SignalProducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalProducer"}],"abstract":[{"type":"text","text":"A SignalProducer creates Signals that can produce values of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" "},{"type":"text","text":"and\/or fail with errors of type "},{"type":"codeVoice","code":"Error"},{"type":"text","text":". If no failure should be possible,"},{"type":"text","text":" "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" can be specified for "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SignalProducer"}],"url":"\/documentation\/reactiveswift\/signalproducer"}}}