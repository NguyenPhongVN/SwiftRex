{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineLatest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"properties"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"emptySentinel"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Property","preciseIdentifier":"s:13ReactiveSwift8PropertyC","text":"Property"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/PropertyProtocol","preciseIdentifier":"s:13ReactiveSwift16PropertyProtocolP","text":"PropertyProtocol"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reactiveswift\/validatingproperty\/combinelatest(_:emptysentinel:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty\/combineLatest(_:emptySentinel:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Combines the values of all the given "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s, in the manner described by"},{"type":"text","text":" "},{"type":"codeVoice","code":"combineLatest(with:)"},{"type":"text","text":". If "},{"type":"codeVoice","code":"properties"},{"type":"text","text":" is empty, the resulting "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" would have "},{"type":"codeVoice","code":"emptySentinel"},{"type":"text","text":" as its"},{"type":"text","text":" "},{"type":"text","text":"constant value."}],"kind":"symbol","metadata":{"role":"symbol","title":"combineLatest(_:emptySentinel:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineLatest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"emptySentinel"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Property","preciseIdentifier":"s:13ReactiveSwift8PropertyC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]>"}],"symbolKind":"method","externalID":"s:13ReactiveSwift16PropertyProtocolPAAE13combineLatest_13emptySentinelAA0C0CySay7Element_5ValueQYd__GGqd___AKtSTRd__AabHRpd__lFZ::SYNTHESIZED::s:13ReactiveSwift18ValidatingPropertyC","extendedModule":"ReactiveSwift","modules":[{"name":"ReactiveSwift"}]},"hierarchy":{"paths":[["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty\/PropertyProtocol-Implementations"]]},"references":{"doc://ReactiveSwift/documentation/ReactiveSwift/ValidatingProperty/combineLatest(_:emptySentinel:)":{"role":"symbol","title":"combineLatest(_:emptySentinel:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combineLatest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":", "},{"kind":"externalParam","text":"emptySentinel"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Property","preciseIdentifier":"s:13ReactiveSwift8PropertyC"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Iterator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"]>"}],"abstract":[{"type":"text","text":"Combines the values of all the given "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s, in the manner described by"},{"type":"text","text":" "},{"type":"codeVoice","code":"combineLatest(with:)"},{"type":"text","text":". If "},{"type":"codeVoice","code":"properties"},{"type":"text","text":" is empty, the resulting "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" would have "},{"type":"codeVoice","code":"emptySentinel"},{"type":"text","text":" as its"},{"type":"text","text":" "},{"type":"text","text":"constant value."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty\/combineLatest(_:emptySentinel:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift\/validatingproperty\/combinelatest(_:emptysentinel:)"},"doc://ReactiveSwift/documentation/ReactiveSwift/ValidatingProperty":{"role":"symbol","title":"ValidatingProperty","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatingProperty"}],"abstract":[{"type":"text","text":"A mutable property that validates mutations before committing them."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidatingProperty"}],"url":"\/documentation\/reactiveswift\/validatingproperty"},"doc://ReactiveSwift/documentation/ReactiveSwift/ValidatingProperty/PropertyProtocol-Implementations":{"role":"collectionGroup","title":"PropertyProtocol Implementations","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty\/PropertyProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/reactiveswift\/validatingproperty\/propertyprotocol-implementations"},"doc://ReactiveSwift/documentation/ReactiveSwift/Property":{"role":"symbol","title":"Property","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Property"}],"abstract":[{"type":"text","text":"A read-only property that can be observed for its changes over time. There"},{"type":"text","text":" "},{"type":"text","text":"are three categories of read-only properties:"}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Property","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Property"}],"url":"\/documentation\/reactiveswift\/property"},"doc://ReactiveSwift/documentation/ReactiveSwift":{"role":"collection","title":"ReactiveSwift","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift"},"doc://ReactiveSwift/documentation/ReactiveSwift/PropertyProtocol":{"role":"symbol","title":"PropertyProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyProtocol"}],"abstract":[{"type":"text","text":"Represents a property that allows observation of its changes."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/PropertyProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PropertyProtocol"}],"url":"\/documentation\/reactiveswift\/propertyprotocol"}}}