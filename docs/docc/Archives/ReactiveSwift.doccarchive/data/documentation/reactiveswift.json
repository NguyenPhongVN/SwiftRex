{"variants":[{"paths":["\/documentation\/reactiveswift"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":""}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ReactiveSwift","title":"ReactiveSwift","symbolKind":"module","role":"collection","modules":[{"name":"ReactiveSwift"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Action","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/AnyDisposable","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Atomic","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/CompositeDisposable","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ImmediateScheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Lifetime","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/MutableProperty","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Observer","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Property","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/QueueScheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ScopedDisposable","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SerialDisposable","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/TestScheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/UIScheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty"]},{"title":"Protocols","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingSource","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingTargetProvider","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ComposableMutablePropertyProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/DateScheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Disposable","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/EventProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/MutablePropertyProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/OptionalProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/PropertyProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ReactiveExtensionsProvider","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Scheduler","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducerConvertible","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducerProtocol","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProtocol"]},{"title":"Structures","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Bag","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingTarget","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/FlattenStrategy","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Reactive","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer"]},{"title":"Functions","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/defaultEventLog(identifier:event:fileName:functionName:lineNumber:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/EventLogger"]},{"title":"Enumerations","identifiers":["doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ActionError","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/LoggingEvent","doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Termination"]}],"references":{"doc://ReactiveSwift/documentation/ReactiveSwift/Reactive":{"role":"symbol","title":"Reactive","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reactive"}],"abstract":[{"type":"text","text":"A proxy which hosts reactive extensions of "},{"type":"codeVoice","code":"Base"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Reactive","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reactive"}],"url":"\/documentation\/reactiveswift\/reactive"},"doc://ReactiveSwift/documentation/ReactiveSwift/EventLogger":{"role":"symbol","title":"EventLogger","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLogger"}],"abstract":[{"type":"text","text":"A type that represents an event logging function."},{"type":"text","text":" "},{"type":"text","text":"Signature is:"},{"type":"text","text":" "},{"type":"text","text":"- identifier"},{"type":"text","text":" "},{"type":"text","text":"- event"},{"type":"text","text":" "},{"type":"text","text":"- fileName"},{"type":"text","text":" "},{"type":"text","text":"- functionName"},{"type":"text","text":" "},{"type":"text","text":"- lineNumber"}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/EventLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLogger"}],"url":"\/documentation\/reactiveswift\/eventlogger"},"doc://ReactiveSwift/documentation/ReactiveSwift/Termination":{"role":"symbol","title":"Termination","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Termination"}],"abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Termination","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Termination"}],"url":"\/documentation\/reactiveswift\/termination"},"doc://ReactiveSwift/documentation/ReactiveSwift/Lifetime":{"role":"symbol","title":"Lifetime","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lifetime"}],"abstract":[{"type":"text","text":"Represents the lifetime of an object, and provides a hook to observe when"},{"type":"text","text":" "},{"type":"text","text":"the object deinitializes."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Lifetime","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Lifetime"}],"url":"\/documentation\/reactiveswift\/lifetime"},"doc://ReactiveSwift/documentation/ReactiveSwift/SerialDisposable":{"role":"symbol","title":"SerialDisposable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SerialDisposable"}],"abstract":[{"type":"text","text":"A disposable that disposes of its wrapped disposable, and allows its"},{"type":"text","text":" "},{"type":"text","text":"wrapped disposable to be replaced."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SerialDisposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SerialDisposable"}],"url":"\/documentation\/reactiveswift\/serialdisposable"},"doc://ReactiveSwift/documentation/ReactiveSwift/PropertyProtocol":{"role":"symbol","title":"PropertyProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PropertyProtocol"}],"abstract":[{"type":"text","text":"Represents a property that allows observation of its changes."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/PropertyProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PropertyProtocol"}],"url":"\/documentation\/reactiveswift\/propertyprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/FlattenStrategy":{"role":"symbol","title":"FlattenStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlattenStrategy"}],"abstract":[{"type":"text","text":"Describes how a stream of inner streams should be flattened into a stream of values."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/FlattenStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlattenStrategy"}],"url":"\/documentation\/reactiveswift\/flattenstrategy"},"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProtocol":{"role":"symbol","title":"SignalProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalProtocol"}],"abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SignalProtocol"}],"url":"\/documentation\/reactiveswift\/signalprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/BindingTargetProvider":{"role":"symbol","title":"BindingTargetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingTargetProvider"}],"abstract":[{"type":"text","text":"Describes an entity which be bond towards."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingTargetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingTargetProvider"}],"url":"\/documentation\/reactiveswift\/bindingtargetprovider"},"doc://ReactiveSwift/documentation/ReactiveSwift/ImmediateScheduler":{"role":"symbol","title":"ImmediateScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateScheduler"}],"abstract":[{"type":"text","text":"A scheduler that performs all work synchronously."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ImmediateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateScheduler"}],"url":"\/documentation\/reactiveswift\/immediatescheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/Atomic":{"role":"symbol","title":"Atomic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atomic"}],"abstract":[{"type":"text","text":"An atomic variable."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Atomic","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atomic"}],"url":"\/documentation\/reactiveswift\/atomic"},"doc://ReactiveSwift/documentation/ReactiveSwift/MutablePropertyProtocol":{"role":"symbol","title":"MutablePropertyProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutablePropertyProtocol"}],"abstract":[{"type":"text","text":"Represents an observable property that can be mutated directly."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/MutablePropertyProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutablePropertyProtocol"}],"url":"\/documentation\/reactiveswift\/mutablepropertyprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProducerProtocol":{"role":"symbol","title":"SignalProducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalProducerProtocol"}],"abstract":[{"type":"text","text":"A protocol for constraining associated types to "},{"type":"codeVoice","code":"SignalProducer"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SignalProducerProtocol"}],"url":"\/documentation\/reactiveswift\/signalproducerprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/defaultEventLog(identifier:event:fileName:functionName:lineNumber:)":{"role":"symbol","title":"defaultEventLog(identifier:event:fileName:functionName:lineNumber:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultEventLog"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"event"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"functionName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"lineNumber"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/defaultEventLog(identifier:event:fileName:functionName:lineNumber:)","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift\/defaulteventlog(identifier:event:filename:functionname:linenumber:)"},"doc://ReactiveSwift/documentation/ReactiveSwift/ActionError":{"role":"symbol","title":"ActionError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionError"}],"abstract":[{"type":"codeVoice","code":"ActionError"},{"type":"text","text":" represents the error that could be emitted by a unit of work of a"},{"type":"text","text":" "},{"type":"text","text":"certain "},{"type":"codeVoice","code":"Action"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ActionError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionError"}],"url":"\/documentation\/reactiveswift\/actionerror"},"doc://ReactiveSwift/documentation/ReactiveSwift/TestScheduler":{"role":"symbol","title":"TestScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestScheduler"}],"abstract":[{"type":"text","text":"A scheduler that implements virtualized time, for use in testing."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/TestScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestScheduler"}],"url":"\/documentation\/reactiveswift\/testscheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/Action":{"role":"symbol","title":"Action","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"abstract":[{"type":"codeVoice","code":"Action"},{"type":"text","text":" represents a repeatable work like "},{"type":"codeVoice","code":"SignalProducer"},{"type":"text","text":". But on top of the"},{"type":"text","text":" "},{"type":"text","text":"isolation of produced "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":"s from a "},{"type":"codeVoice","code":"SignalProducer"},{"type":"text","text":", "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" provides"},{"type":"text","text":" "},{"type":"text","text":"higher-order features like availability and mutual exclusion."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Action","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Action"}],"url":"\/documentation\/reactiveswift\/action"},"doc://ReactiveSwift/documentation/ReactiveSwift/DateScheduler":{"role":"symbol","title":"DateScheduler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateScheduler"}],"abstract":[{"type":"text","text":"A particular kind of scheduler that supports enqueuing actions at future"},{"type":"text","text":" "},{"type":"text","text":"dates."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/DateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateScheduler"}],"url":"\/documentation\/reactiveswift\/datescheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/EventProtocol":{"role":"symbol","title":"EventProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventProtocol"}],"abstract":[{"type":"text","text":"Event protocol for constraining signal extensions"}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/EventProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventProtocol"}],"url":"\/documentation\/reactiveswift\/eventprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/QueueScheduler":{"role":"symbol","title":"QueueScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueueScheduler"}],"abstract":[{"type":"text","text":"A scheduler backed by a serial GCD queue."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/QueueScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueueScheduler"}],"url":"\/documentation\/reactiveswift\/queuescheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/ReactiveExtensionsProvider":{"role":"symbol","title":"ReactiveExtensionsProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReactiveExtensionsProvider"}],"abstract":[{"type":"text","text":"Describes a provider of reactive extensions."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ReactiveExtensionsProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReactiveExtensionsProvider"}],"url":"\/documentation\/reactiveswift\/reactiveextensionsprovider"},"doc://ReactiveSwift/documentation/ReactiveSwift/UIScheduler":{"role":"symbol","title":"UIScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIScheduler"}],"abstract":[{"type":"text","text":"A scheduler that performs all work on the main queue, as soon as possible."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/UIScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIScheduler"}],"url":"\/documentation\/reactiveswift\/uischeduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/CompositeDisposable":{"role":"symbol","title":"CompositeDisposable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompositeDisposable"}],"abstract":[{"type":"text","text":"A disposable that will dispose of any number of other disposables."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/CompositeDisposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompositeDisposable"}],"url":"\/documentation\/reactiveswift\/compositedisposable"},"doc://ReactiveSwift/documentation/ReactiveSwift":{"role":"collection","title":"ReactiveSwift","abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift","kind":"symbol","type":"topic","url":"\/documentation\/reactiveswift"},"doc://ReactiveSwift/documentation/ReactiveSwift/Signal":{"role":"symbol","title":"Signal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signal"}],"abstract":[{"type":"text","text":"A push-driven stream that sends Events over time, parameterized by the type"},{"type":"text","text":" "},{"type":"text","text":"of values being sent ("},{"type":"codeVoice","code":"Value"},{"type":"text","text":") and the type of failure that can occur"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"Error"},{"type":"text","text":"). If no failures should be possible, Never can be specified for"},{"type":"text","text":" "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Signal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Signal"}],"url":"\/documentation\/reactiveswift\/signal"},"doc://ReactiveSwift/documentation/ReactiveSwift/AnyDisposable":{"role":"symbol","title":"AnyDisposable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyDisposable"}],"abstract":[{"type":"text","text":"A type-erased disposable that forwards operations to an underlying disposable."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/AnyDisposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyDisposable"}],"url":"\/documentation\/reactiveswift\/anydisposable"},"doc://ReactiveSwift/documentation/ReactiveSwift/ValidatingProperty":{"role":"symbol","title":"ValidatingProperty","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValidatingProperty"}],"abstract":[{"type":"text","text":"A mutable property that validates mutations before committing them."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ValidatingProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValidatingProperty"}],"url":"\/documentation\/reactiveswift\/validatingproperty"},"doc://ReactiveSwift/documentation/ReactiveSwift/OptionalProtocol":{"role":"symbol","title":"OptionalProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalProtocol"}],"abstract":[{"type":"text","text":"An optional protocol for use in type constraints."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/OptionalProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OptionalProtocol"}],"url":"\/documentation\/reactiveswift\/optionalprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProducerConvertible":{"role":"symbol","title":"SignalProducerConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalProducerConvertible"}],"abstract":[{"type":"text","text":"Represents reactive primitives that can be represented by "},{"type":"codeVoice","code":"SignalProducer"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducerConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SignalProducerConvertible"}],"url":"\/documentation\/reactiveswift\/signalproducerconvertible"},"doc://ReactiveSwift/documentation/ReactiveSwift/LoggingEvent":{"role":"symbol","title":"LoggingEvent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoggingEvent"}],"abstract":[{"type":"text","text":"A namespace for logging event types."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/LoggingEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoggingEvent"}],"url":"\/documentation\/reactiveswift\/loggingevent"},"doc://ReactiveSwift/documentation/ReactiveSwift/Property":{"role":"symbol","title":"Property","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Property"}],"abstract":[{"type":"text","text":"A read-only property that can be observed for its changes over time. There"},{"type":"text","text":" "},{"type":"text","text":"are three categories of read-only properties:"}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Property","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Property"}],"url":"\/documentation\/reactiveswift\/property"},"doc://ReactiveSwift/documentation/ReactiveSwift/ComposableMutablePropertyProtocol":{"role":"symbol","title":"ComposableMutablePropertyProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComposableMutablePropertyProtocol"}],"abstract":[{"type":"text","text":"Represents a mutable property that can be safety composed by exposing its"},{"type":"text","text":" "},{"type":"text","text":"synchronization mechanic through the defined closure-based interface."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ComposableMutablePropertyProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComposableMutablePropertyProtocol"}],"url":"\/documentation\/reactiveswift\/composablemutablepropertyprotocol"},"doc://ReactiveSwift/documentation/ReactiveSwift/Scheduler":{"role":"symbol","title":"Scheduler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scheduler"}],"abstract":[{"type":"text","text":"Represents a serial queue of work items."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Scheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scheduler"}],"url":"\/documentation\/reactiveswift\/scheduler"},"doc://ReactiveSwift/documentation/ReactiveSwift/Disposable":{"role":"symbol","title":"Disposable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Disposable"}],"abstract":[{"type":"text","text":"Represents something that can be “disposed”, usually associated with freeing"},{"type":"text","text":" "},{"type":"text","text":"resources or canceling work."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Disposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Disposable"}],"url":"\/documentation\/reactiveswift\/disposable"},"doc://ReactiveSwift/documentation/ReactiveSwift/Bag":{"role":"symbol","title":"Bag","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bag"}],"abstract":[{"type":"text","text":"An unordered, non-unique collection of values of type "},{"type":"codeVoice","code":"Element"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Bag","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Bag"}],"url":"\/documentation\/reactiveswift\/bag"},"doc://ReactiveSwift/documentation/ReactiveSwift/BindingSource":{"role":"symbol","title":"BindingSource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingSource"}],"abstract":[{"type":"text","text":"Describes a source which can be bound."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingSource"}],"url":"\/documentation\/reactiveswift\/bindingsource"},"doc://ReactiveSwift/documentation/ReactiveSwift/Observer":{"role":"symbol","title":"Observer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observer"}],"abstract":[],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/Observer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Observer"}],"url":"\/documentation\/reactiveswift\/observer"},"doc://ReactiveSwift/documentation/ReactiveSwift/SignalProducer":{"role":"symbol","title":"SignalProducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalProducer"}],"abstract":[{"type":"text","text":"A SignalProducer creates Signals that can produce values of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" "},{"type":"text","text":"and\/or fail with errors of type "},{"type":"codeVoice","code":"Error"},{"type":"text","text":". If no failure should be possible,"},{"type":"text","text":" "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" can be specified for "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/SignalProducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SignalProducer"}],"url":"\/documentation\/reactiveswift\/signalproducer"},"doc://ReactiveSwift/documentation/ReactiveSwift/BindingTarget":{"role":"symbol","title":"BindingTarget","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingTarget"}],"abstract":[{"type":"text","text":"A binding target that can be used with the "},{"type":"codeVoice","code":"<~"},{"type":"text","text":" operator."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/BindingTarget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BindingTarget"}],"url":"\/documentation\/reactiveswift\/bindingtarget"},"doc://ReactiveSwift/documentation/ReactiveSwift/ScopedDisposable":{"role":"symbol","title":"ScopedDisposable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScopedDisposable"}],"abstract":[{"type":"text","text":"A disposable that, upon deinitialization, will automatically dispose of"},{"type":"text","text":" "},{"type":"text","text":"its inner disposable."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/ScopedDisposable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScopedDisposable"}],"url":"\/documentation\/reactiveswift\/scopeddisposable"},"doc://ReactiveSwift/documentation/ReactiveSwift/MutableProperty":{"role":"symbol","title":"MutableProperty","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutableProperty"}],"abstract":[{"type":"text","text":"A mutable property of type "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" that allows observation of its changes."}],"identifier":"doc:\/\/ReactiveSwift\/documentation\/ReactiveSwift\/MutableProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutableProperty"}],"url":"\/documentation\/reactiveswift\/mutableproperty"}}}