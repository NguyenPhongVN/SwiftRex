{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"StateType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Dependencies"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"MiddlewareEffect"},{"type":"text","text":" is a function providing an incoming "},{"type":"codeVoice","code":"Action"},{"type":"text","text":", "},{"type":"codeVoice","code":"State"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" (dispatcher source, dependencies, cancellation closure)"},{"type":"text","text":" "},{"type":"text","text":"and expecting as result one or multiple effects that will eventually result in outgoing actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" is a publisher or observable type according to your reactive framework. It can be a one-shot effect, such as an HTTP request,"},{"type":"text","text":" "},{"type":"text","text":"an observation that gives back multiple values over time, such as CoreLocation or NotificationCenter, a Timer, a pure value already known"},{"type":"text","text":" "},{"type":"text","text":"or even an empty effect using the "},{"type":"codeVoice","code":".doNothing"},{"type":"text","text":" constructor, if thereâ€™s no need for side-effects."},{"type":"text","text":" "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" cannot fail, and its element\/output\/value type is the "},{"type":"codeVoice","code":"OutputAction"},{"type":"text","text":" generic of this middleware. The purpose is running tasks,"},{"type":"text","text":" "},{"type":"text","text":"creating actions as they respond and returning these actions over time back to the Store. When the Effect completes, it should send a"},{"type":"text","text":" "},{"type":"text","text":"completion event so the middleware will cleanup the resources."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Cancellation: effects can optionally provide a cancellation token, which can be any hashable value. If another effect arrives in the same"},{"type":"text","text":" "},{"type":"text","text":"middleware instance having the very same cancellation token, the previous effect will be cancelled and replaced by the new one. This is"},{"type":"text","text":" "},{"type":"text","text":"useful in case you want to keep only the last request of certain kind running, but cancel any previous ongoing request when a new is"},{"type":"text","text":" "},{"type":"text","text":"dispatched. You can also explicitly cancel one or many effects at any point. For that, you will be given a "},{"type":"codeVoice","code":"toCancel"},{"type":"text","text":" closure during every"},{"type":"text","text":" "},{"type":"text","text":"action arrival within the "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" (third parameter). Feel free to call cancellation at that point or even later, if you hold this "},{"type":"codeVoice","code":"toCancel"},{"type":"text","text":" "},{"type":"text","text":"closure."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using Promises"}]},{"type":"codeListing","syntax":null,"code":["let someMiddleware = EffectMiddleware<ApiRequestAction, ApiResponseAction, SomeState, Void>.onAction { action, state, context in","  switch action {","  case .users:","    return .promise { completion in","      DispatchQueue.main.asyncAfter(deadline: .now() + 3) {","        completion(ApiResponseAction.someResponse(\"42\"))","      }","      return Disposables.create() \/\/ Or a way to cancel the ongoing task","    }","  case .somethingIDontCare:","    return .doNothing","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"From Publisher"}]},{"type":"codeListing","syntax":null,"code":["typealias ApiFetchMiddlewareDependencies = (session: @escaping () -> URLSession, decoder: @escaping () -> JSONDecoder)","","let apiFetchMiddleware =","  EffectMiddleware<ApiRequestAction, ApiResponseAction, SomeState, ApiFetchMiddlewareDependencies>.onAction { action, state, context in","    switch action {","    case .users:","      return context.dependencies.urlSession","        .dataTaskPublisher(for: fetchAllUsersURL())","        .map { data, _ in data }","        .decode(type: [User].self, decoder: context.dependencies)","        .map { users in ApiResponseAction.gotUserList(users) }","        .replaceError(with: ApiResponseAction.errorRetrivingUserList)","        .asEffect","    case .user(id: UUID):","      \/\/ ..","    case .somethingIDontCare:","      return .doNothing","    }","  }.inject((session: { URLSession.shared }, decoder: JSONDecoder.init))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Cancellation"}]},{"type":"codeListing","syntax":null,"code":["typealias ApiFetchMiddlewareDependencies = (session: @escaping () -> URLSession, decoder: @escaping () -> JSONDecoder)","","let apiFetchMiddleware =","  EffectMiddleware<ApiRequestAction, ApiResponseAction, SomeState, ApiFetchMiddlewareDependencies>.onAction { action, state, context in","    switch action {","    case let .userPicture(userId):","      return context.dependencies.urlSession","        .dataTaskPublisher(for: fetchPicture())","        .map { data, _ in ApiResponseAction.gotUserPicture(id: userId, data: data) }","        .replaceError(with: ApiResponseAction.errorRetrivingUserPicture(id: userId))","        .asEffect(cancellationToken: \"image-for-user-\\(userId)\") \/\/ this will automatically cancel any pending download for the same image","                                                                 \/\/ using the URL would also be possible","    case let .cancelImageDownload(userId):","      return context.toCancel(\"image-for-user-\\(userId)\")        \/\/ alternatively you can explicitly cancel tasks by token","    }","  }.inject((session: { URLSession.shared }, decoder: JSONDecoder.init))"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswiftrex\/effectmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/RxSwiftRex\/8SwiftRex18MiddlewareProtocolP","doc:\/\/RxSwiftRex\/8SwiftRex6MonoidP","doc:\/\/RxSwiftRex\/8SwiftRex9SemigroupP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Easiest way to implement a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":", with a single function that gives you all you need, and from which you can return an "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectMiddleware"}],"title":"EffectMiddleware","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10RxSwiftRex16EffectMiddlewareC","modules":[{"name":"RxSwiftRex"}],"navigatorTitle":[{"kind":"identifier","text":"EffectMiddleware"}]},"hierarchy":{"paths":[["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/handle(action:from:state:)","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(action:state:)","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:)-82k82","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:outputAction:)-1w7et","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:outputAction:state:)-2sjy","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:state:)-50s4k","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(outputAction:)-9gmdc","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(outputAction:state:)-6jtwl","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(state:)-6053q","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/liftToCollection(action:stateCollection:)-9io5k","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/liftToCollection(inputAction:outputAction:stateCollection:)"]},{"title":"Type Methods","identifiers":["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/onAction(do:)-3u7om","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/onAction(do:)-96e4b"]},{"title":"Default Implementations","identifiers":["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/Semigroup-Implementations","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/MiddlewareProtocol-Implementations","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/Monoid-Implementations"],"generated":true}],"references":{"doc://RxSwiftRex/8SwiftRex18MiddlewareProtocolP":{"type":"unresolvable","title":"SwiftRex.MiddlewareProtocol","identifier":"doc:\/\/RxSwiftRex\/8SwiftRex18MiddlewareProtocolP"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware":{"role":"symbol","title":"EffectMiddleware","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EffectMiddleware"}],"abstract":[{"type":"text","text":"Easiest way to implement a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":", with a single function that gives you all you need, and from which you can return an "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":"."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EffectMiddleware"}],"url":"\/documentation\/rxswiftrex\/effectmiddleware"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(action:state:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"InputActionType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OutputActionType"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"lift(action:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(action:state:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(action:state:)"},"doc://RxSwiftRex/8SwiftRex6MonoidP":{"type":"unresolvable","title":"SwiftRex.Monoid","identifier":"doc:\/\/RxSwiftRex\/8SwiftRex6MonoidP"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(inputAction:state:)-50s4k":{"role":"symbol","title":"lift(inputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:state:)-50s4k","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(inputaction:state:)-50s4k"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(inputAction:outputAction:state:)-2sjy":{"role":"symbol","title":"lift(inputAction:outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:outputAction:state:)-2sjy","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(inputaction:outputaction:state:)-2sjy"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/MiddlewareProtocol-Implementations":{"role":"collectionGroup","title":"MiddlewareProtocol Implementations","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/MiddlewareProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/middlewareprotocol-implementations"},"doc://RxSwiftRex/documentation/RxSwiftRex":{"role":"collection","title":"RxSwiftRex","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(outputAction:state:)-6jtwl":{"role":"symbol","title":"lift(outputAction:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(outputAction:state:)-6jtwl","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(outputaction:state:)-6jtwl"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(inputAction:outputAction:)-1w7et":{"role":"symbol","title":"lift(inputAction:outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:outputAction:)-1w7et","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(inputaction:outputaction:)-1w7et"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/Semigroup-Implementations":{"role":"collectionGroup","title":"Semigroup Implementations","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/Semigroup-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/semigroup-implementations"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(inputAction:)-82k82":{"role":"symbol","title":"lift(inputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalInputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalInputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(inputAction:)-82k82","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(inputaction:)-82k82"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(state:)-6053q":{"role":"symbol","title":"lift(state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalStateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(state:)-6053q","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(state:)-6053q"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/liftToCollection(inputAction:outputAction:stateCollection:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"liftToCollection(inputAction:outputAction:stateCollection:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"liftToCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CollectionState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"inputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"externalParam","text":"stateCollection"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"GlobalState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/liftToCollection(inputAction:outputAction:stateCollection:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lifttocollection(inputaction:outputaction:statecollection:)"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/onAction(do:)-96e4b":{"conformance":{"constraints":[{"type":"codeVoice","code":"Dependencies"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"onAction(do:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"do"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:10RxSwiftRex6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/onAction(do:)-96e4b","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/onaction(do:)-96e4b"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/onAction(do:)-3u7om":{"role":"symbol","title":"onAction(do:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"do"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Effect","preciseIdentifier":"s:10RxSwiftRex6EffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"MiddlewareReader","preciseIdentifier":"s:8SwiftRex16MiddlewareReaderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">>"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/onAction(do:)-3u7om","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/onaction(do:)-3u7om"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/liftToCollection(action:stateCollection:)-9io5k":{"conformance":{"constraints":[{"type":"codeVoice","code":"InputActionType"},{"type":"text","text":" is "},{"type":"codeVoice","code":"OutputActionType"},{"type":"text","text":" and "},{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"liftToCollection(action:stateCollection:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"liftToCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"GlobalState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"CollectionState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementIDAction","preciseIdentifier":"s:8SwiftRex15ElementIDActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":">?>, "},{"kind":"externalParam","text":"stateCollection"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CollectionState"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/liftToCollection(action:stateCollection:)-9io5k","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lifttocollection(action:statecollection:)-9io5k"},"doc://RxSwiftRex/8SwiftRex9SemigroupP":{"type":"unresolvable","title":"SwiftRex.Semigroup","identifier":"doc:\/\/RxSwiftRex\/8SwiftRex9SemigroupP"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/handle(action:from:state:)":{"role":"symbol","title":"handle(action:from:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionSource","preciseIdentifier":"s:8SwiftRex12ActionSourceV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GetState","preciseIdentifier":"s:8SwiftRex8GetStatea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"IO","preciseIdentifier":"s:8SwiftRex2IOV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Handles the incoming actions and may or not start async tasks, check the latest state at any point or dispatch additional actions."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/handle(action:from:state:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/handle(action:from:state:)"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/lift(outputAction:)-9gmdc":{"role":"symbol","title":"lift(outputAction:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lift"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"GlobalOutputActionType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"outputAction"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"OutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EffectMiddleware","preciseIdentifier":"s:10RxSwiftRex16EffectMiddlewareC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"InputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"GlobalOutputActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Dependencies"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/lift(outputAction:)-9gmdc","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/lift(outputaction:)-9gmdc"},"doc://RxSwiftRex/documentation/RxSwiftRex/EffectMiddleware/Monoid-Implementations":{"role":"collectionGroup","title":"Monoid Implementations","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/EffectMiddleware\/Monoid-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswiftrex\/effectmiddleware\/monoid-implementations"}}}