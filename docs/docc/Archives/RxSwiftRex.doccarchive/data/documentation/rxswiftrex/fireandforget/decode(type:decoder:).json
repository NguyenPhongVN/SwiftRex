{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Item"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Decoder"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"DataDecoder","preciseIdentifier":"s:7RxSwift11DataDecoderP"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" of the decoded type"}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"-conforming type to attempt to decode to"}]}]},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A capable decoder, e.g. "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" or "},{"type":"codeVoice","code":"PropertyListDecoder"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If using a custom decoder, it must conform to the "},{"type":"codeVoice","code":"DataDecoder"},{"type":"text","text":" protocol."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswiftrex\/fireandforget\/decode(type:decoder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/decode(type:decoder:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attempt to decode the emitted "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" using a provided decoder."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"decode(type:decoder:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Item"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Decoder"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:7RxSwift14ObservableTypePAA10Foundation4DataV7ElementRtzrlE6decode4type7decoderAA0C0Cyqd__Gqd__m_qd_0_tSeRd__AA0F7DecoderRd_0_r0_lF::SYNTHESIZED::s:10RxSwiftRex13FireAndForgetV","extendedModule":"RxSwift","modules":[{"name":"RxSwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/ObservableType-Implementations"]]},"references":{"doc://RxSwiftRex/documentation/RxSwiftRex/FireAndForget":{"role":"symbol","title":"FireAndForget","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FireAndForget"}],"abstract":[{"type":"text","text":"Fire And Forget is an observable for when you don’t care about the output of certain async operation. It’s important to notice that this operation"},{"type":"text","text":" "},{"type":"text","text":"can’t fail. If you want to also ignore the failure, then you can catchErrors and return nil in the proper init."},{"type":"text","text":" "},{"type":"text","text":"It may complete successfully when task is done."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FireAndForget"}],"url":"\/documentation\/rxswiftrex\/fireandforget"},"doc://RxSwiftRex/documentation/RxSwiftRex":{"role":"collection","title":"RxSwiftRex","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex"},"doc://RxSwiftRex/documentation/RxSwiftRex/FireAndForget/ObservableType-Implementations":{"role":"collectionGroup","title":"ObservableType Implementations","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/ObservableType-Implementations","kind":"article","type":"topic","url":"\/documentation\/rxswiftrex\/fireandforget\/observabletype-implementations"},"doc://RxSwiftRex/documentation/RxSwiftRex/FireAndForget/decode(type:decoder:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"decode(type:decoder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Item"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Decoder"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Item"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Attempt to decode the emitted "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" using a provided decoder."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/decode(type:decoder:)","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/fireandforget\/decode(type:decoder:)"}}}