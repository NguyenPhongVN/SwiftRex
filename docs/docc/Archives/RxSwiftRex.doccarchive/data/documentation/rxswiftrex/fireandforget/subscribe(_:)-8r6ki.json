{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Observer"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"observer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Observer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"IgnoringOutput"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Observer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Observer"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ObserverType","preciseIdentifier":"s:7RxSwift12ObserverTypeP"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subscription for "},{"type":"codeVoice","code":"observer"},{"type":"text","text":" that can be used to cancel production of sequence elements and free resources."}]}]},{"kind":"content","content":[{"anchor":"Grammar","level":3,"type":"heading","text":"Grammar"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Next* (Error | Completed)?"}]}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"sequences can produce zero or more elements so zero or more "},{"type":"codeVoice","code":"Next"},{"type":"text","text":" events can be sent to "},{"type":"codeVoice","code":"observer"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"once an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Completed"},{"type":"text","text":" event is sent, the sequence terminates and can’t produce any other elements"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible that events are sent from different threads, but no two events can be sent concurrently to"},{"type":"text","text":" "},{"type":"codeVoice","code":"observer"},{"type":"text","text":"."}]},{"anchor":"Resource-Management","level":3,"type":"heading","text":"Resource Management"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When sequence sends "},{"type":"codeVoice","code":"Complete"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" event all internal resources that compute sequence elements"},{"type":"text","text":" "},{"type":"text","text":"will be freed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To cancel production of sequence elements and free resources immediately, call "},{"type":"codeVoice","code":"dispose"},{"type":"text","text":" on returned"},{"type":"text","text":" "},{"type":"text","text":"subscription."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/rxswiftrex\/fireandforget\/subscribe(_:)-8r6ki"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/subscribe(_:)-8r6ki","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Subscribes "},{"type":"codeVoice","code":"observer"},{"type":"text","text":" to receive events for this sequence."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Observer"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Observer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"}],"title":"subscribe(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:10RxSwiftRex13FireAndForgetV9subscribey0aB010Disposable_pqd__7ElementQyd__RszAE12ObserverTypeRd__lF","modules":[{"name":"RxSwiftRex"}]},"hierarchy":{"paths":[["doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex","doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget"]]},"references":{"doc://RxSwiftRex/documentation/RxSwiftRex/FireAndForget":{"role":"symbol","title":"FireAndForget","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FireAndForget"}],"abstract":[{"type":"text","text":"Fire And Forget is an observable for when you don’t care about the output of certain async operation. It’s important to notice that this operation"},{"type":"text","text":" "},{"type":"text","text":"can’t fail. If you want to also ignore the failure, then you can catchErrors and return nil in the proper init."},{"type":"text","text":" "},{"type":"text","text":"It may complete successfully when task is done."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FireAndForget"}],"url":"\/documentation\/rxswiftrex\/fireandforget"},"doc://RxSwiftRex/documentation/RxSwiftRex/FireAndForget/subscribe(_:)-8r6ki":{"role":"symbol","title":"subscribe(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Observer"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Observer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Disposable","preciseIdentifier":"s:7RxSwift10DisposableP"}],"abstract":[{"type":"text","text":"Subscribes "},{"type":"codeVoice","code":"observer"},{"type":"text","text":" to receive events for this sequence."}],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex\/FireAndForget\/subscribe(_:)-8r6ki","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex\/fireandforget\/subscribe(_:)-8r6ki"},"doc://RxSwiftRex/documentation/RxSwiftRex":{"role":"collection","title":"RxSwiftRex","abstract":[],"identifier":"doc:\/\/RxSwiftRex\/documentation\/RxSwiftRex","kind":"symbol","type":"topic","url":"\/documentation\/rxswiftrex"}}}