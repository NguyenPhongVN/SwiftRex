{"variants":[{"paths":["\/documentation\/combinerex\/observableviewmodel\/storetype-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/StoreType-Implementations","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"No overview available."}],"kind":"article","metadata":{"modules":[{"name":"CombineRex"}],"role":"collectionGroup","title":"StoreType Implementations"},"hierarchy":{"paths":[["doc:\/\/CombineRex\/documentation\/CombineRex","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/asObservableViewModel(initialState:)","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/asObservableViewModel(initialState:emitsValue:)","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/contramapAction(_:)","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/eraseToAnyStoreType()","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/mapState(_:)","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/projection(action:state:)"],"generated":true}],"references":{"doc://CombineRex/documentation/CombineRex/ObservableViewModel/projection(action:state:)":{"role":"symbol","title":"projection(action:state:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"projection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewState"},{"kind":"text","text":">("},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StoreProjection","preciseIdentifier":"s:8SwiftRex15StoreProjectiona"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a subset of the current store by applying any transformation to the State or Action types."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/projection(action:state:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/projection(action:state:)"},"doc://CombineRex/documentation/CombineRex":{"role":"collection","title":"CombineRex","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex","kind":"symbol","type":"topic","url":"\/documentation\/combinerex"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel":{"role":"symbol","title":"ObservableViewModel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableViewModel"}],"abstract":[{"type":"text","text":"A Store Projection made to be used in SwiftUI"}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableViewModel"}],"url":"\/documentation\/combinerex\/observableviewmodel"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/asObservableViewModel(initialState:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"StateType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"asObservableViewModel(initialState:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservableViewModel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ObservableViewModel","preciseIdentifier":"s:10CombineRex19ObservableViewModelC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/asObservableViewModel(initialState:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/asobservableviewmodel(initialstate:)"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/contramapAction(_:)":{"role":"symbol","title":"contramapAction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contramapAction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewActionType"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"NewActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Create another "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":" that handles a different type of Action. The original store will be used behind the scenes, by only the provided"},{"type":"text","text":" "},{"type":"text","text":"“transform” closure whenever an action arrives."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/contramapAction(_:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/contramapaction(_:)"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/eraseToAnyStoreType()":{"role":"symbol","title":"eraseToAnyStoreType()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyStoreType"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Type-erasure for the protocol "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":"."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/eraseToAnyStoreType()","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/erasetoanystoretype()"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/asObservableViewModel(initialState:emitsValue:)":{"role":"symbol","title":"asObservableViewModel(initialState:emitsValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservableViewModel"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"emitsValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ShouldEmitValue","preciseIdentifier":"s:8SwiftRex15ShouldEmitValueO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"ObservableViewModel","preciseIdentifier":"s:10CombineRex19ObservableViewModelC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/asObservableViewModel(initialState:emitsValue:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/asobservableviewmodel(initialstate:emitsvalue:)"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/mapState(_:)":{"role":"symbol","title":"mapState(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewStateType"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Create another "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":" that handles a different type of State. The original store will be used behind the scenes, by only applying"},{"type":"text","text":" "},{"type":"text","text":"the provided “transform” closure whenever the state changes in the original store."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/mapState(_:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/mapstate(_:)"}}}