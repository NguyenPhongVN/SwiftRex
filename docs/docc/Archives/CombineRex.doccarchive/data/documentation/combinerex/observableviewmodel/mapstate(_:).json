{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewStateType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"an "},{"type":"codeVoice","code":"AnyStoreType"},{"type":"text","text":" with same "},{"type":"codeVoice","code":"ActionType"},{"type":"text","text":" but different "},{"type":"codeVoice","code":"StateType"},{"type":"text","text":" than the original store."}]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a closure that will be executed every time the state changes in the original store, so we can map it into the state type"},{"type":"text","text":" "},{"type":"text","text":"expected by the subscribers of the proxy "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":"."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/combinerex\/observableviewmodel\/mapstate(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/mapState(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Create another "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":" that handles a different type of State. The original store will be used behind the scenes, by only applying"},{"type":"text","text":" "},{"type":"text","text":"the provided “transform” closure whenever the state changes in the original store."}],"kind":"symbol","metadata":{"role":"symbol","title":"mapState(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewStateType"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:8SwiftRex9StoreTypePAAE8mapStateyAA03AnycD0Vy06ActionD0Qzqd__Gqd__0fD0QzclF::SYNTHESIZED::s:10CombineRex19ObservableViewModelC","extendedModule":"SwiftRex","modules":[{"name":"CombineRex"}]},"hierarchy":{"paths":[["doc:\/\/CombineRex\/documentation\/CombineRex","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/StoreType-Implementations"]]},"references":{"doc://CombineRex/documentation/CombineRex":{"role":"collection","title":"CombineRex","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex","kind":"symbol","type":"topic","url":"\/documentation\/combinerex"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel":{"role":"symbol","title":"ObservableViewModel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableViewModel"}],"abstract":[{"type":"text","text":"A Store Projection made to be used in SwiftUI"}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableViewModel"}],"url":"\/documentation\/combinerex\/observableviewmodel"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/mapState(_:)":{"role":"symbol","title":"mapState(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewStateType"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyStoreType","preciseIdentifier":"s:8SwiftRex12AnyStoreTypeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewStateType"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Create another "},{"type":"codeVoice","code":"StoreType"},{"type":"text","text":" that handles a different type of State. The original store will be used behind the scenes, by only applying"},{"type":"text","text":" "},{"type":"text","text":"the provided “transform” closure whenever the state changes in the original store."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/mapState(_:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/mapstate(_:)"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/StoreType-Implementations":{"role":"collectionGroup","title":"StoreType Implementations","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/StoreType-Implementations","kind":"article","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/storetype-implementations"}}}