{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"dispatchedAction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchedAction","preciseIdentifier":"s:8SwiftRex16DispatchedActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"dispatchedAction","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"container for action (the action to be dispatched) + dispatcher (information about the action source,"},{"type":"text","text":" "},{"type":"text","text":"containing file\/line, function and additional information for debugging and logging purposes)\/"}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/combinerex\/observableviewmodel\/dispatch(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/dispatch(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The function that allows Views, ViewControllers, Presenters to dispatch actions to the store."},{"type":"text","text":" "},{"type":"text","text":"Also way for a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" to trigger their own actions, usually in response to events or async operations."}],"kind":"symbol","metadata":{"role":"symbol","title":"dispatch(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DispatchedAction","preciseIdentifier":"s:8SwiftRex16DispatchedActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">)"}],"symbolKind":"method","externalID":"s:10CombineRex19ObservableViewModelC8dispatchyy05SwiftB016DispatchedActionVyxGF","modules":[{"name":"CombineRex"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"13.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"10.15","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"13.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"6.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/CombineRex\/documentation\/CombineRex","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel"]]},"references":{"doc://CombineRex/documentation/CombineRex/ObservableViewModel/dispatch(_:)":{"role":"symbol","title":"dispatch(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DispatchedAction","preciseIdentifier":"s:8SwiftRex16DispatchedActionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"The function that allows Views, ViewControllers, Presenters to dispatch actions to the store."},{"type":"text","text":" "},{"type":"text","text":"Also way for a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" to trigger their own actions, usually in response to events or async operations."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/dispatch(_:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/dispatch(_:)"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel":{"role":"symbol","title":"ObservableViewModel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableViewModel"}],"abstract":[{"type":"text","text":"A Store Projection made to be used in SwiftUI"}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableViewModel"}],"url":"\/documentation\/combinerex\/observableviewmodel"},"doc://CombineRex/documentation/CombineRex":{"role":"collection","title":"CombineRex","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex","kind":"symbol","type":"topic","url":"\/documentation\/combinerex"}}}