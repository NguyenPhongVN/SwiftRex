{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"action","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the action to be dispatched"}]}]},{"name":"file","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"File that created and dispatched the action, by default this is the file calling the "},{"type":"codeVoice","code":"dispatch"},{"type":"text","text":" function"}]}]},{"name":"function","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function that created and dispatched the action, by default this is the function calling the "},{"type":"codeVoice","code":"dispatch"},{"type":"text","text":" function"}]}]},{"name":"line","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Line in the file where the action was created and dispatched, by default this is the line from where the "},{"type":"codeVoice","code":"dispatch"},{"type":"text","text":" function was"},{"type":"text","text":" "},{"type":"text","text":"called"}]}]},{"name":"info","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Additional information about the moment where the action was dispatched. This is an optional String that can hold information"},{"type":"text","text":" "},{"type":"text","text":"useful for debugging, logging, monitoring or analytics. By default this is nil but you can add any information useful to trace"},{"type":"text","text":" "},{"type":"text","text":"the journey of this action."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/combinerex\/observableviewmodel\/dispatch(_:file:function:line:info:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/dispatch(_:file:function:line:info:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The function that allows Views, ViewControllers, Presenters to dispatch actions to the store."},{"type":"text","text":" "},{"type":"text","text":"Also way for a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" to trigger their own actions, usually in response to events or async operations."}],"kind":"symbol","metadata":{"role":"symbol","title":"dispatch(_:file:function:line:info:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"symbolKind":"method","externalID":"s:8SwiftRex13ActionHandlerPAAE8dispatch_4file8function4line4infoy0C4TypeQz_S2SSuSSSgtF::SYNTHESIZED::s:10CombineRex19ObservableViewModelC","extendedModule":"SwiftRex","modules":[{"name":"CombineRex"}]},"hierarchy":{"paths":[["doc:\/\/CombineRex\/documentation\/CombineRex","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/ActionHandler-Implementations"]]},"references":{"doc://CombineRex/documentation/CombineRex/ObservableViewModel/dispatch(_:file:function:line:info:)":{"role":"symbol","title":"dispatch(_:file:function:line:info:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ActionType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"info"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"The function that allows Views, ViewControllers, Presenters to dispatch actions to the store."},{"type":"text","text":" "},{"type":"text","text":"Also way for a "},{"type":"codeVoice","code":"Middleware"},{"type":"text","text":" to trigger their own actions, usually in response to events or async operations."}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/dispatch(_:file:function:line:info:)","kind":"symbol","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/dispatch(_:file:function:line:info:)"},"doc://CombineRex/documentation/CombineRex":{"role":"collection","title":"CombineRex","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex","kind":"symbol","type":"topic","url":"\/documentation\/combinerex"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel":{"role":"symbol","title":"ObservableViewModel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableViewModel"}],"abstract":[{"type":"text","text":"A Store Projection made to be used in SwiftUI"}],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableViewModel"}],"url":"\/documentation\/combinerex\/observableviewmodel"},"doc://CombineRex/documentation/CombineRex/ObservableViewModel/ActionHandler-Implementations":{"role":"collectionGroup","title":"ActionHandler Implementations","abstract":[],"identifier":"doc:\/\/CombineRex\/documentation\/CombineRex\/ObservableViewModel\/ActionHandler-Implementations","kind":"article","type":"topic","url":"\/documentation\/combinerex\/observableviewmodel\/actionhandler-implementations"}}}